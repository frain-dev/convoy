version: "3"

volumes:
  postgres_data:
  redis_data:

services:
    web:
        build:
          context: ./
          dockerfile: Dockerfile.dev
        command: [ "/start.sh" ]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        ports:
          - "5005:5005"
        depends_on:
            - postgres
            - redis_server
            - migrate
        environment:
            - CONVOY_ENV=development
            - CONVOY_VERSION=v1.0.0
            - CONVOY_COMPONENT=web
        logging:
            driver: syslog
            options:
                syslog-address: "udp://localhost:1514"
                syslog-format: rfc5424
                tag: "web"

    migrate:
        build:
            context: ./
            dockerfile: Dockerfile.dev
        entrypoint: ["./cmd", "migrate", "up"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        depends_on:
            postgres:
                condition: service_healthy

    agent:
        build:
            context: ./
            dockerfile: Dockerfile.dev
        entrypoint: ["./cmd", "agent", "--config", "convoy.json"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        ports:
            - "5008:5008"
        depends_on:
            - postgres
            - redis_server
            - migrate
        environment:
            - CONVOY_ENV=development
            - CONVOY_VERSION=v1.0.0
            - CONVOY_COMPONENT=agent
        logging:
            driver: syslog
            options:
                syslog-address: "udp://localhost:1514"
                syslog-format: rfc5424
                tag: "agent"

    postgres:
        image: postgres:15.2-alpine
        restart: unless-stopped
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: convoy
            POSTGRES_USER: convoy
            POSTGRES_PASSWORD: convoy
            PGDATA: /data/postgres
        volumes:
            - postgres_data:/data/postgres
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 5s
            retries: 5

    redis_server:
        image: redis:7-alpine
        restart: always
        ports:
            - "6379:6379"
        volumes:
          - redis_data:/data

    prometheus:
        image: prom/prometheus:v2.24.0
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
        restart: always

    promtail:
        image: grafana/promtail:2.9.0
        volumes:
            - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml
        environment:
            - LOKI_URL=${LOKI_URL:-http://host.docker.internal:3100}
        command: -config.file=/etc/promtail/config.yml -config.expand-env=true
        ports:
            - "1514:1514/udp"  # Syslog UDP port
        restart: always
        extra_hosts:
            - "host.docker.internal:host-gateway"
