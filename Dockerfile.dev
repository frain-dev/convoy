# syntax=docker/dockerfile:1
FROM node:16 as node-env

WORKDIR /app

COPY ./web/ui/dashboard/package*.json ./

RUN git config --global url."https://".insteadOf git://

RUN npm install --force

COPY ./web/ui/dashboard/ .

RUN npm run build

FROM golang:1.21 as build-env

WORKDIR /go/src/frain-dev/convoy

COPY . .

COPY --from=node-env /app/dist /go/src/frain-dev/convoy/api/ui/build

# Get dependencies - will also be cached if we don't change mod/sum
RUN go mod download && go mod verify

# Build the app
RUN CGO_ENABLED=0 go install ./cmd

FROM alpine:3.16.2

COPY --from=build-env /go/bin/cmd /
COPY --from=build-env /go/src/frain-dev/convoy/internal/email/templates/* /templates/
COPY --from=build-env /go/src/frain-dev/convoy/configs/local/start.sh /
COPY --from=build-env /go/src/frain-dev/convoy/configs/local/convoy.json /

RUN chmod +x /cmd

RUN apk add --no-cache gcompat

EXPOSE 8080
