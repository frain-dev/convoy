# syntax=docker/dockerfile:1
FROM node:24.5 as node-env
WORKDIR /app
COPY ./web/ui/dashboard/package*.json ./
RUN git config --global url."https://".insteadOf git://
RUN --mount=type=cache,target=/root/.npm \
    npm install
COPY ./web/ui/dashboard .
RUN npm run build

FROM golang:1.25 as build-env
WORKDIR /go/src/frain-dev/convoy

# Set Go module proxy and enable module caching
ENV GOPROXY=https://proxy.golang.org,direct
ENV GOSUMDB=sum.golang.org
ENV GOCACHE=/go/cache

# Copy go mod files first for better caching
COPY ./go.mod ./go.sum ./

# Use BuildKit cache mount for Go modules and cache
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/go/cache \
    go mod download && \
    go mod verify

# Copy only the built UI assets
COPY --from=node-env /app/dist ./api/ui/build

# Copy source code (this will invalidate cache when source changes)
COPY . .

# Build the binary with cache mounts
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/go/cache \
    CGO_ENABLED=0 go install ./cmd

FROM alpine:3.16.2
RUN --mount=type=cache,target=/var/cache/apk \
    apk add --no-cache gcompat

COPY --from=build-env /go/bin/cmd /
COPY --from=build-env /go/src/frain-dev/convoy/internal/email/templates/* templates/
COPY --from=build-env /go/src/frain-dev/convoy/configs/local/start.sh /

RUN chmod +x /cmd

EXPOSE 8080
