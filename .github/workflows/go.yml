name: Build and run all tests
on:
    push:
        branches:
            - main
    pull_request:

jobs:
    test:
        if: ${{ !(contains(github.head_ref, 'ui/')) || !(contains(github.head_ref, 'cms/')) }}
        strategy:
            matrix:
                go-version: [1.16.x, 1.17.x]
                os: [ubuntu-latest, macos-latest]
                mongodb-version: ["4.0", "4.2", "4.4"]
                redis-version: ["6.2.6"]

        services:
            typesense:
                image: typesense/typesense:0.23.1
                env:
                    TYPESENSE_API_KEY: some-api-key
                    TYPESENSE_DATA_DIR: /data
                    TYPESENSE_ENABLE_CORS: true
                ports:
                    - "8108:8108"
                volumes:
                    - ts_data:/data

        runs-on: ubuntu-latest
        steps:
            - name: curl Typesense
              run: curl http://localhost:8108/health

            - name: Start MongoDB
              uses: supercharge/mongodb-github-action@1.4.1
              with:
                  mongodb-version: ${{ matrix.mongodb-version }}

            - name: Start Redis v${{ matrix.redis-version }}
              uses: supercharge/redis-github-action@1.4.0
              with:
                  redis-version: ${{ matrix.redis-version }}
                  redis-port: 6379

            - name: Get the version
              id: get_version
              run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:8})

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Cache go modules
              uses: actions/cache@v1
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
                  restore-keys: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}

            - name: Check out code
              uses: actions/checkout@v2

            - name: Get and verify dependencies
              run: go mod download && go mod verify

            - name: Build app to make sure there are zero issues
              run: go build -o convoy ./cmd

            - name: Go vet
              run: go vet ./...

            - name: Run integration tests
              run: make integration_tests
              env:
                  TEST_MONGO_DSN: "mongodb://localhost:27017/testdb"
                  TEST_REDIS_DSN: "redis://localhost:6379"
                  CONVOY_TYPESENSE_HOST: "http://localhost:8108"
                  CONVOY_TYPESENSE_API_KEY: "some-api-key"
                  CONVOY_SEARCH_TYPE: "typesense"
