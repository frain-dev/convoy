name: Release Go Binaries

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Manual workflow name"
        required: true
  push:
    tags:
      # Release binary for every tag.
      - v0.*

jobs:
  build_ui:
    name: Build UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Artifact
        run: "make ui_install"
      - name: Archive Build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-without-markdown
          path: |
            web/ui/dashboard/dist
            !web/ui/dashboard/dist/**/*.md

  analyze-tags:
    name: Analyze Tags
    runs-on: ubuntu-latest
    outputs:
      publish: ${{ steps.gt.outputs.is_current_tag_the_highest }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - uses: Dotunj/github-action-analyze-tags@v0.2.0
        name: Get tags
        id: gt

  release-matrix:
    name: Release & Publish Go Binary
    needs: [build_ui, analyze-tags]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-without-markdown
          path: server/ui/build
          fetch-depth: 0

      - uses: docker/login-action@v1
        name: Authenticate with Docker
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.PAT }}

      - uses: actions/setup-go@v2
        name: Setup go
        with:
          go-version: 1.17

      - uses: goreleaser/goreleaser-action@v2
        name: Release & Upload
        if: needs.analyze-tags.outputs.publish == 'false' # action coerces booleans as strings
        with:
          version: latest
          args: -f .goreleaser.yml release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          REPO_NAME: ${{ github.repository }}

      - uses: goreleaser/goreleaser-action@v2
        name: Release, Upload & Publish
        if: needs.analyze-tags.outputs.publish == 'true'
        with:
          version: latest
          args: -f .publisher.yml release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          REPO_NAME: ${{ github.repository }}
