name: Build and run all tests
on:
  push:
    branches:
      - daniel/feat/add_immune_to_ci

jobs:
  test:
    if: ${{ !(contains(github.head_ref, 'ui/')) || !(contains(github.head_ref, 'cms/')) }}
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.17.x ]
        immune-test-file-names: [ "immune-push-events.json" ]
        os: [ ubuntu-latest, macos-latest ]
        immune-version: [ "v0.1.2" ]
        mongodb-version: [ "4.0", "4.2", "4.4" ]
        redis-version: [ "6.2.6" ]

    runs-on: ubuntu-latest
    steps:
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.4.1
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Pull immune
        run: export GO111MODULE=on && go get github.com/frain-dev/immune@${{ matrix.immune-version }}

      - name: Build immune
        run: |
          go version && \
          cd $(go env GOPATH)/pkg/mod/github.com/frain-dev/immune@${{ matrix.immune-version }} && \
          export GO111MODULE=on && go build -o $(go env GOPATH)/bin/immune ./cmd/*

      - name: Start convoy
        run: export GO111MODULE=on && go run ./cmd server &
        env:
          CONVOY_DB_DSN: "mongodb://localhost:27017/testdb"
          CONVOY_REDIS_DSN: "redis://localhost:6379"

      - name: Setup ngrok
        uses: danvixent/ngrok-tunneling-action@v0.1.16
        with:
          timeout: 1h
          port: 8000
          os: ${{ runner.os }}
          ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Sleep to allow convoy & ngrok server start
        run: sleep 3

      - name: Run immune tests
        run: |
          cd ./immune-test-files && \
          export IMMUNE_EVENT_TARGET_URL=$(curl http://localhost:4040/api/tunnels | jq ".tunnels[0].public_url") && \
          immune run --config ./${{ matrix.immune-test-file-names }}
