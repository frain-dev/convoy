basePath: /
definitions:
  auth.Role:
    properties:
      endpoint:
        type: string
      group:
        type: string
      type:
        type: string
    type: object
  datastore.AlertConfiguration:
    properties:
      count:
        type: integer
      threshold:
        type: string
    type: object
  datastore.ApiKey:
    properties:
      header_name:
        type: string
      header_value:
        type: string
    type: object
  datastore.BasicAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  datastore.CLIMetadata:
    properties:
      event_type:
        type: string
      host_name:
        type: string
    type: object
  datastore.DeliveryAttempt:
    properties:
      api_version:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      endpoint_id:
        type: string
      error:
        type: string
      http_status:
        type: string
      ip_address:
        type: string
      method:
        type: string
      msg_id:
        type: string
      request_http_header:
        $ref: '#/definitions/datastore.HttpHeader'
      response_data:
        type: string
      response_http_header:
        $ref: '#/definitions/datastore.HttpHeader'
      status:
        type: boolean
      uid:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  datastore.Device:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      endpoint_id:
        type: string
      group_id:
        type: string
      host_name:
        type: string
      last_seen_at:
        type: string
      status:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.Endpoint:
    properties:
      advanced_signatures:
        type: boolean
      authentication:
        $ref: '#/definitions/datastore.EndpointAuthentication'
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      events:
        type: integer
      group_id:
        type: string
      http_timeout:
        type: string
      is_disabled:
        type: boolean
      owner_id:
        type: string
      rate_limit:
        type: integer
      rate_limit_duration:
        type: string
      secrets:
        items:
          $ref: '#/definitions/datastore.Secret'
        type: array
      slack_webhook_url:
        type: string
      support_email:
        type: string
      target_url:
        type: string
      title:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.EndpointAuthentication:
    properties:
      api_key:
        $ref: '#/definitions/datastore.ApiKey'
      type:
        type: string
    type: object
  datastore.Event:
    properties:
      app_id:
        description: Deprecated
        type: string
      created_at:
        type: string
      data:
        description: |-
          Data is an arbitrary JSON value that gets sent as the body of the
          webhook to the endpoints
        items:
          type: integer
        type: array
      deleted_at:
        type: string
      endpoint_metadata:
        items:
          $ref: '#/definitions/datastore.Endpoint'
        type: array
      endpoints:
        items:
          type: string
        type: array
      event_type:
        type: string
      group_id:
        type: string
      headers:
        $ref: '#/definitions/httpheader.HTTPHeader'
      matched_endpoints:
        description: TODO(all) remove this field
        type: integer
      source_id:
        type: string
      source_metadata:
        $ref: '#/definitions/datastore.Source'
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.EventDelivery:
    properties:
      cli_metadata:
        $ref: '#/definitions/datastore.CLIMetadata'
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      device_id:
        type: string
      endpoint_id:
        type: string
      endpoint_metadata:
        $ref: '#/definitions/datastore.Endpoint'
      event_id:
        type: string
      event_metadata:
        $ref: '#/definitions/datastore.Event'
      group_id:
        type: string
      headers:
        $ref: '#/definitions/httpheader.HTTPHeader'
      metadata:
        $ref: '#/definitions/datastore.Metadata'
      status:
        type: string
      subscription_id:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.FilterConfiguration:
    properties:
      event_types:
        items:
          type: string
        type: array
      filter:
        additionalProperties: true
        type: object
    type: object
  datastore.Group:
    properties:
      config:
        $ref: '#/definitions/datastore.GroupConfig'
      created_at:
        type: string
      deleted_at:
        type: string
      logo_url:
        type: string
      metadata:
        $ref: '#/definitions/datastore.GroupMetadata'
      name:
        type: string
      organisation_id:
        type: string
      rate_limit:
        description: 'TODO(subomi): refactor this into the Instance API.'
        type: integer
      rate_limit_duration:
        type: string
      statistics:
        $ref: '#/definitions/datastore.GroupStatistics'
      type:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.GroupConfig:
    properties:
      disable_endpoint:
        type: boolean
      is_retention_policy_enabled:
        type: boolean
      max_payload_read_size:
        type: integer
      ratelimit:
        $ref: '#/definitions/datastore.RateLimitConfiguration'
      replay_attacks:
        type: boolean
      retention_policy:
        $ref: '#/definitions/datastore.RetentionPolicyConfiguration'
      signature:
        $ref: '#/definitions/datastore.SignatureConfiguration'
      strategy:
        $ref: '#/definitions/datastore.StrategyConfiguration'
    type: object
  datastore.GroupMetadata:
    properties:
      retained_events:
        type: integer
    type: object
  datastore.GroupStatistics:
    properties:
      messages_sent:
        type: integer
      total_endpoints:
        type: integer
    type: object
  datastore.HMac:
    properties:
      encoding:
        type: string
      hash:
        type: string
      header:
        type: string
      secret:
        type: string
    type: object
  datastore.HttpHeader:
    additionalProperties:
      type: string
    type: object
  datastore.Metadata:
    properties:
      data:
        description: Data to be sent to endpoint.
        items:
          type: integer
        type: array
      interval_seconds:
        type: integer
      next_send_time:
        type: integer
      num_trials:
        description: |-
          NumTrials: number of times we have tried to deliver this Event to
          an application
        type: integer
      retry_limit:
        type: integer
      strategy:
        type: string
    type: object
  datastore.Organisation:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      name:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.PaginationData:
    properties:
      next:
        type: integer
      page:
        type: integer
      perPage:
        type: integer
      prev:
        type: integer
      total:
        type: integer
      totalPage:
        type: integer
    type: object
  datastore.ProviderConfig:
    properties:
      twitter:
        $ref: '#/definitions/datastore.TwitterProviderConfig'
    type: object
  datastore.RateLimitConfiguration:
    properties:
      count:
        type: integer
      duration:
        type: integer
    type: object
  datastore.RetentionPolicyConfiguration:
    properties:
      policy:
        type: string
    type: object
  datastore.RetryConfiguration:
    properties:
      duration:
        type: integer
      retry_count:
        type: integer
      type:
        type: string
    type: object
  datastore.Secret:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      expires_at:
        type: string
      uid:
        type: string
      updated_at:
        type: string
      value:
        type: string
    type: object
  datastore.SignatureConfiguration:
    properties:
      header:
        type: string
      versions:
        items:
          $ref: '#/definitions/datastore.SignatureVersion'
        type: array
    type: object
  datastore.SignatureVersion:
    properties:
      created_at:
        type: string
      encoding:
        type: string
      hash:
        type: string
      uid:
        type: string
    type: object
  datastore.Source:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      forward_headers:
        items:
          type: string
        type: array
      group_id:
        type: string
      is_disabled:
        type: boolean
      mask_id:
        type: string
      name:
        type: string
      provider:
        type: string
      provider_config:
        $ref: '#/definitions/datastore.ProviderConfig'
      type:
        type: string
      uid:
        type: string
      updated_at:
        type: string
      verifier:
        $ref: '#/definitions/datastore.VerifierConfig'
    type: object
  datastore.StrategyConfiguration:
    properties:
      duration:
        type: integer
      retry_count:
        type: integer
      type:
        type: string
    type: object
  datastore.Subscription:
    properties:
      alert_config:
        $ref: '#/definitions/datastore.AlertConfiguration'
        description: subscription config
      created_at:
        type: string
      deleted_at:
        type: string
      device_id:
        type: string
      disable_endpoint:
        type: boolean
      endpoint_metadata:
        $ref: '#/definitions/datastore.Endpoint'
      filter_config:
        $ref: '#/definitions/datastore.FilterConfiguration'
      name:
        type: string
      rate_limit_config:
        $ref: '#/definitions/datastore.RateLimitConfiguration'
      retry_config:
        $ref: '#/definitions/datastore.RetryConfiguration'
      source_metadata:
        $ref: '#/definitions/datastore.Source'
      status:
        type: string
      type:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.TwitterProviderConfig:
    properties:
      crc_verified_at:
        type: integer
    type: object
  datastore.VerifierConfig:
    properties:
      api_key:
        $ref: '#/definitions/datastore.ApiKey'
      basic_auth:
        $ref: '#/definitions/datastore.BasicAuth'
      hmac:
        $ref: '#/definitions/datastore.HMac'
      type:
        type: string
    type: object
  httpheader.HTTPHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  models.APIKey:
    properties:
      expires_at:
        type: string
      key_type:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/models.Role'
    type: object
  models.Endpoint:
    properties:
      advanced_signatures:
        type: boolean
      appID:
        description: Deprecated but necessary for backward compatibility
        type: string
      authentication:
        $ref: '#/definitions/datastore.EndpointAuthentication'
      description:
        type: string
      http_timeout:
        type: string
      is_disabled:
        type: boolean
      name:
        type: string
      owner_id:
        type: string
      rate_limit:
        type: integer
      rate_limit_duration:
        type: string
      secret:
        type: string
      slack_webhook_url:
        type: string
      support_email:
        type: string
      url:
        type: string
    type: object
  models.Event:
    properties:
      app_id:
        type: string
      custom_headers:
        additionalProperties:
          type: string
        type: object
      data:
        description: |-
          Data is an arbitrary JSON value that gets sent as the body of the
          webhook to the endpoints
        items:
          type: integer
        type: array
      endpoint_id:
        type: string
      event_type:
        type: string
    type: object
  models.Group:
    properties:
      config:
        $ref: '#/definitions/datastore.GroupConfig'
      logo_url:
        type: string
      name:
        type: string
      rate_limit:
        type: integer
      rate_limit_duration:
        type: string
      type:
        type: string
    type: object
  models.PortalAPIKeyResponse:
    properties:
      endpoint_id:
        type: string
      group_id:
        type: string
      key:
        type: string
      key_type:
        type: string
      role:
        $ref: '#/definitions/auth.Role'
      url:
        type: string
    type: object
  models.PortalLink:
    properties:
      endpoints:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  models.PortalLinkResponse:
    properties:
      created_at:
        type: integer
      deleted_at:
        type: integer
      endpoint_count:
        type: integer
      endpoints:
        items:
          type: string
        type: array
      endpoints_metadata:
        items:
          $ref: '#/definitions/datastore.Endpoint'
        type: array
      group_id:
        type: string
      name:
        type: string
      token:
        type: string
      uid:
        type: string
      updated_at:
        type: integer
      url:
        type: string
    type: object
  models.RetryConfiguration:
    properties:
      duration:
        type: string
      interval_seconds:
        type: integer
      retry_count:
        type: integer
      type:
        type: string
    type: object
  models.Role:
    properties:
      app:
        type: string
      group:
        type: string
      type:
        type: string
    type: object
  models.Source:
    properties:
      is_disabled:
        type: boolean
      name:
        type: string
      provider:
        type: string
      type:
        type: string
      verifier:
        $ref: '#/definitions/datastore.VerifierConfig'
    type: object
  models.SourceResponse:
    properties:
      created_at:
        type: integer
      deleted_at:
        type: integer
      group_id:
        type: string
      is_disabled:
        type: boolean
      mask_id:
        type: string
      name:
        type: string
      provider:
        type: string
      provider_config:
        $ref: '#/definitions/datastore.ProviderConfig'
      type:
        type: string
      uid:
        type: string
      updated_at:
        type: integer
      url:
        type: string
      verifier:
        $ref: '#/definitions/datastore.VerifierConfig'
    type: object
  models.Subscription:
    properties:
      alert_config:
        $ref: '#/definitions/datastore.AlertConfiguration'
      app_id:
        description: Deprecated but necessary for backward compatibility
        type: string
      disable_endpoint:
        type: boolean
      endpoint_id:
        type: string
      filter_config:
        $ref: '#/definitions/datastore.FilterConfiguration'
      name:
        type: string
      rate_limit_config:
        $ref: '#/definitions/datastore.RateLimitConfiguration'
      retry_config:
        $ref: '#/definitions/models.RetryConfiguration'
      source_id:
        type: string
    type: object
  server.Stub:
    type: object
  server.pagedResponse:
    properties:
      content: {}
      pagination:
        $ref: '#/definitions/datastore.PaginationData'
    type: object
  util.ServerResponse:
    properties:
      data:
        items:
          type: integer
        type: array
      message:
        type: string
      status:
        type: boolean
    type: object
host: dashboard.getconvoy.io
info:
  contact:
    email: Info@frain.dev
    name: API Support
    url: https://getconvoy.io/docs
  description: Convoy is a fast and secure distributed webhooks service. This document
    contains datastore.s API specification.
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  termsOfService: https://getconvoy.io/terms
  title: Convoy API Specification
  version: 0.1.12
paths:
  /api/v1/organisations:
    get:
      consumes:
      - application/json
      description: This endpoint fetches the organisations a user is part of, this
        route can only be accessed with a personal api key
      parameters:
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/datastore.Organisation'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get organisations
      tags:
      - Organisation
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: This endpoint fetches groups
      parameters:
      - description: group name
        in: query
        name: name
        type: string
      - description: organisation id
        in: query
        name: orgID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Group'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get groups
      tags:
      - Group
    post:
      consumes:
      - application/json
      description: This endpoint creates a group
      parameters:
      - description: Organisation id
        in: query
        name: orgID
        required: true
        type: string
      - description: Group Details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a group
      tags:
      - Group
  /api/v1/projects/{projectID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a group using its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a group
      tags:
      - Group
    get:
      consumes:
      - application/json
      description: This endpoint fetches a group by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a group
      tags:
      - Group
    put:
      consumes:
      - application/json
      description: This endpoint updates a group
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Group Details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - Group
  /api/v1/projects/{projectID}/endpoints:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an endpoints
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Endpoint'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get endpoints
      tags:
      - Endpoints
    post:
      consumes:
      - application/json
      description: This endpoint creates an endpoint
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      - description: Endpoint Details
        in: body
        name: endpoint
        required: true
        schema:
          $ref: '#/definitions/models.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an endpoint
      tags:
      - Application Endpoints
  /api/v1/projects/{projectID}/endpoints/{endpointID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes an endpoint
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete endpoint
      tags:
      - Endpoints
    get:
      consumes:
      - application/json
      description: This endpoint fetches an endpoint
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get endpoint
      tags:
      - Endpoints
    put:
      consumes:
      - application/json
      description: This endpoint updates an endpoint
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      - description: Endpoint Details
        in: body
        name: endpoint
        required: true
        schema:
          $ref: '#/definitions/models.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update an endpoint
      tags:
      - Endpoints
  /api/v1/projects/{projectID}/endpoints/{endpointID}/expire_secret:
    put:
      consumes:
      - application/json
      description: This endpoint expires the current endpoint secret and generates
        a new one.
      parameters:
      - description: Project id
        in: query
        name: projectID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Expire and generate new application endpoint secret
      tags:
      - Application Endpoints
  /api/v1/projects/{projectID}/eventdeliveries:
    get:
      consumes:
      - application/json
      description: This endpoint fetch event deliveries.
      parameters:
      - description: application id
        in: query
        name: appId
        type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event id
        in: query
        name: eventId
        type: string
      - description: start date
        in: query
        name: startDate
        type: string
      - description: end date
        in: query
        name: endDate
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      - description: status
        in: query
        items:
          type: string
        name: status
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          allOf:
                          - $ref: '#/definitions/datastore.EventDelivery'
                          - properties:
                              data:
                                $ref: '#/definitions/server.Stub'
                            type: object
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get event deliveries
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an event delivery.
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get event delivery
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/deliveryattempts:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an app message's delivery attempts
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.DeliveryAttempt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempts
      tags:
      - DeliveryAttempts
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/deliveryattempts/{deliveryAttemptID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an app event delivery attempt
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      - description: delivery attempt id
        in: path
        name: deliveryAttemptID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.DeliveryAttempt'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempt
      tags:
      - DeliveryAttempts
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/resend:
    put:
      consumes:
      - application/json
      description: This endpoint resends an app event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Resend an app event
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/eventdeliveries/batchretry:
    post:
      consumes:
      - application/json
      description: This endpoint resends multiple app events
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery ids
        in: body
        name: ids
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/server.Stub'
          - properties:
              ids:
                items:
                  type: string
                type: array
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Batch Resend app events
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/eventdeliveries/countbatchretryevents:
    get:
      consumes:
      - application/json
      description: This endpoint counts app events that will be affected by a batch
        retry operation
      parameters:
      - description: application id
        in: query
        name: appId
        type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: start date
        in: query
        name: startDate
        type: string
      - description: end date
        in: query
        name: endDate
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.Stub'
                  - properties:
                      num:
                        type: integer
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Count affected eventDeliveries
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/eventdeliveries/forceresend:
    post:
      consumes:
      - application/json
      description: This endpoint force resends multiple app events
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event delivery ids
        in: body
        name: ids
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/server.Stub'
          - properties:
              ids:
                items:
                  type: string
                type: array
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Force Resend app events
      tags:
      - EventDelivery
  /api/v1/projects/{projectID}/events:
    get:
      consumes:
      - application/json
      description: This endpoint fetches app events with pagination
      parameters:
      - description: application id
        in: query
        name: appId
        type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: source id
        in: query
        name: sourceId
        type: string
      - description: start date
        in: query
        name: startDate
        type: string
      - description: end date
        in: query
        name: endDate
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          allOf:
                          - $ref: '#/definitions/datastore.Event'
                          - properties:
                              data:
                                $ref: '#/definitions/server.Stub'
                            type: object
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get app events with pagination
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: This endpoint creates an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Event Details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/{eventID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event id
        in: path
        name: eventID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/{eventID}/replay:
    put:
      consumes:
      - application/json
      description: This endpoint replays an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: event id
        in: path
        name: eventID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Replay endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/fanout:
    post:
      consumes:
      - application/json
      description: This endpoint uses the owner_id to fan out an event to multiple
        endpoints.
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Event Details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Fan out an event to multiple endpoints.
      tags:
      - Events
  /api/v1/projects/{projectID}/portal-links:
    get:
      consumes:
      - application/json
      description: This endpoint fetches multiple portal links
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/models.PortalLinkResponse'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple portal links
      tags:
      - PortalLink
    post:
      consumes:
      - application/json
      description: This endpoint creates a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Portal Link Details
        in: body
        name: portallink
        required: true
        schema:
          $ref: '#/definitions/models.PortalLink'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalLinkResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a portal link
      tags:
      - PortalLink
  /api/v1/projects/{projectID}/portal-links/{portalLinkID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches a portal link by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalLinkResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a portal link
      tags:
      - PortalLink
    put:
      consumes:
      - application/json
      description: This endpoint updates a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        type: string
      - description: Portal Link Details
        in: body
        name: portallink
        required: true
        schema:
          $ref: '#/definitions/models.PortalLink'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalLinkResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a portal link
      tags:
      - PortalLink
  /api/v1/projects/{projectID}/portal-links/{portalLinkID}/revoke:
    put:
      consumes:
      - application/json
      description: This endpoint revokes a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Revoke Portal Link
      tags:
      - PortalLink
  /api/v1/projects/{projectID}/sources:
    get:
      consumes:
      - application/json
      description: This endpoint fetches multiple sources
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/models.SourceResponse'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple sources
      tags:
      - Source
    post:
      consumes:
      - application/json
      description: This endpoint creates a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Source Details
        in: body
        name: source
        required: true
        schema:
          $ref: '#/definitions/models.Source'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SourceResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a source
      tags:
      - Source
  /api/v1/projects/{projectID}/sources/{sourceID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete source
      tags:
      - Source
    get:
      consumes:
      - application/json
      description: This endpoint fetches a source by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SourceResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a source
      tags:
      - Source
    put:
      consumes:
      - application/json
      description: This endpoint updates a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        type: string
      - description: Source Details
        in: body
        name: source
        required: true
        schema:
          $ref: '#/definitions/models.Source'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SourceResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a source
      tags:
      - Source
  /api/v1/projects/{projectID}/subscriptions:
    get:
      consumes:
      - application/json
      description: This endpoint fetches all the subscriptions
      parameters:
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      - description: subscription title
        in: query
        name: q
        type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/datastore.Subscription'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all subscriptions
      tags:
      - Subscriptions
    post:
      consumes:
      - application/json
      description: This endpoint creates a subscriptions
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: Subscription details
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/datastore.Subscription'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Creates a subscription
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/{subscriptionID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete subscription
      tags:
      - Subscriptions
    get:
      consumes:
      - application/json
      description: This endpoint fetches an Subscription by it's id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: application id
        in: path
        name: subscriptionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Subscription'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Gets a subscription
      tags:
      - Subscriptions
    put:
      consumes:
      - application/json
      description: This endpoint updates a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        type: string
      - description: Subscription Details
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Subscription'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a subscription
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/{subscriptionID}/toggle_status:
    put:
      consumes:
      - application/json
      description: This endpoint updates a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Subscription'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Toggles a subscription's status from active <-> inactive
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/test_filter:
    post:
      consumes:
      - application/json
      description: This endpoint tests a subscription's filter
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Test subscription filter
      tags:
      - Subscriptions
  /api/v1/security/endpoints/{endpointID}/keys:
    post:
      consumes:
      - application/json
      description: This endpoint creates an api key that will be used by endpoint
        portal or the cli
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        type: string
      - description: endpoint ID
        in: path
        name: endpointID
        required: true
        type: string
      - description: APIKey details
        in: body
        name: appAPIKey
        required: true
        schema:
          $ref: '#/definitions/models.APIKey'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalAPIKeyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an api key for endpoint portal or the cli (API)
      tags:
      - APIKey
  /portal/devices:
    get:
      consumes:
      - application/json
      description: This endpoint fetches all portal link devices
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Device'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      summary: Get portal link devices
      tags:
      - PortalLink Devices
  /portal/endpoints:
    get:
      consumes:
      - application/json
      description: This endpoint fetches all portal link endpoints
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Endpoint'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      summary: Get endpoints
      tags:
      - PortalLink Endpoints
    post:
      consumes:
      - application/json
      description: This endpoint creates an endpoint
      parameters:
      - description: Endpoint Details
        in: body
        name: endpoint
        required: true
        schema:
          $ref: '#/definitions/models.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      summary: Create an endpoint
      tags:
      - PortalLink Endpoints
  /portal/keys:
    get:
      consumes:
      - application/json
      description: This endpoint fetches all portal link endpoints keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalAPIKeyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.ServerResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      summary: Get portal link keys
      tags:
      - PortalLink Keys
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: User related APIs
  name: User
- description: Application related APIs
  name: Application
- description: Configuration related APIs
  name: Configuration
- description: Source related APIs
  name: Source
- description: Subscription related APIs
  name: Subscriptions
- description: Endpoint related APIs
  name: Application Endpoints
- description: Event related APIs
  name: Events
- description: API Key related APIs
  name: APIKey
- description: EventDelivery related APIs
  name: EventDelivery
- description: Delivery Attempt related APIs
  name: DeliveryAttempts
- description: Group related APIs
  name: Group
- description: Organisation related APIs
  name: Organisation
