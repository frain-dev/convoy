basePath: /api/v1
definitions:
  auth.Role:
    properties:
      apps:
        items:
          type: string
        type: array
      groups:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  datastore.APIKey:
    properties:
      created_at:
        type: integer
      delted_at:
        type: integer
      expires_at:
        type: integer
      hash:
        type: string
      key_type:
        type: string
      mask_id:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/auth.Role'
      salt:
        type: string
      uid:
        type: string
      updated_at:
        type: integer
    type: object
  datastore.AppMetadata:
    properties:
      group_id:
        type: string
      support_email:
        type: string
      title:
        type: string
      uid:
        type: string
    type: object
  datastore.Application:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/datastore.Endpoint'
        type: array
      events:
        type: integer
      group_id:
        type: string
      name:
        type: string
      support_email:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.DefaultStrategyConfiguration:
    properties:
      intervalSeconds:
        type: integer
      retryLimit:
        type: integer
    type: object
  datastore.DeliveryAttempt:
    properties:
      api_version:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      endpoint_id:
        type: string
      error:
        type: string
      http_status:
        type: string
      ip_address:
        type: string
      method:
        type: string
      msg_id:
        type: string
      request_http_header:
        $ref: '#/definitions/datastore.HttpHeader'
      response_data:
        type: string
      response_http_header:
        $ref: '#/definitions/datastore.HttpHeader'
      status:
        type: boolean
      uid:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  datastore.Endpoint:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      events:
        items:
          type: string
        type: array
      secret:
        type: string
      status:
        type: string
      target_url:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.EndpointMetadata:
    properties:
      secret:
        type: string
      sent:
        type: boolean
      status:
        type: string
      target_url:
        type: string
      uid:
        type: string
    type: object
  datastore.Event:
    properties:
      app_metadata:
        $ref: '#/definitions/datastore.AppMetadata'
      created_at:
        type: string
      data:
        description: |-
          Data is an arbitrary JSON value that gets sent as the body of the
          webhook to the endpoints
        items:
          type: integer
        type: array
      deleted_at:
        type: string
      event_type:
        type: string
      matched_endpoints:
        type: integer
      provider_id:
        description: |-
          ProviderID is a custom ID that can be used to reconcile this Event
          with your internal systems.
          This is optional
          If not provided, we will generate one for you
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.EventDelivery:
    properties:
      app_metadata:
        $ref: '#/definitions/datastore.AppMetadata'
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      endpoint:
        $ref: '#/definitions/datastore.EndpointMetadata'
        description: Endpoint contains the destination of the event.
      event_metadata:
        $ref: '#/definitions/datastore.EventMetadata'
      metadata:
        $ref: '#/definitions/datastore.Metadata'
      status:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.EventMetadata:
    properties:
      name:
        type: string
      uid:
        type: string
    type: object
  datastore.ExponentialBackoffStrategyConfiguration:
    properties:
      retryLimit:
        type: integer
    type: object
  datastore.Group:
    properties:
      config:
        $ref: '#/definitions/datastore.GroupConfig'
      created_at:
        type: string
      deleted_at:
        type: string
      logo_url:
        type: string
      name:
        type: string
      statistics:
        $ref: '#/definitions/datastore.GroupStatistics'
      uid:
        type: string
      updated_at:
        type: string
    type: object
  datastore.GroupConfig:
    properties:
      disable_endpoint:
        type: boolean
      signature:
        $ref: '#/definitions/datastore.SignatureConfiguration'
      strategy:
        $ref: '#/definitions/datastore.StrategyConfiguration'
    type: object
  datastore.GroupStatistics:
    properties:
      messages_sent:
        type: integer
      total_apps:
        type: integer
    type: object
  datastore.HttpHeader:
    additionalProperties:
      type: string
    type: object
  datastore.Metadata:
    properties:
      data:
        description: Data to be sent to endpoint.
        items:
          type: integer
        type: array
      interval_seconds:
        type: integer
      next_send_time:
        description: |-
          NextSendTime denotes the next time a Event will be published in
          case it failed the first time
        type: integer
      num_trials:
        description: |-
          NumTrials: number of times we have tried to deliver this Event to
          an application
        type: integer
      retry_limit:
        type: integer
      strategy:
        type: string
    type: object
  datastore.PaginationData:
    properties:
      next:
        type: integer
      page:
        type: integer
      perPage:
        type: integer
      prev:
        type: integer
      total:
        type: integer
      totalPage:
        type: integer
    type: object
  datastore.SignatureConfiguration:
    properties:
      hash:
        type: string
      header:
        type: string
    type: object
  datastore.StrategyConfiguration:
    properties:
      default:
        $ref: '#/definitions/datastore.DefaultStrategyConfiguration'
      exponentialBackoff:
        $ref: '#/definitions/datastore.ExponentialBackoffStrategyConfiguration'
      type:
        type: string
    type: object
  models.APIKey:
    properties:
      expires_at:
        type: string
      key_type:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/auth.Role'
    type: object
  models.APIKeyResponse:
    properties:
      created_at:
        type: string
      expires_at:
        type: string
      key:
        type: string
      key_type:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/auth.Role'
      uid:
        type: string
    type: object
  models.Application:
    properties:
      name:
        type: string
      support_email:
        type: string
    type: object
  models.Endpoint:
    properties:
      description:
        type: string
      events:
        items:
          type: string
        type: array
      secret:
        type: string
      url:
        type: string
    type: object
  models.Event:
    properties:
      app_id:
        type: string
      data:
        description: |-
          Data is an arbitrary JSON value that gets sent as the body of the
          webhook to the endpoints
        items:
          type: integer
        type: array
      event_type:
        type: string
    type: object
  models.Group:
    properties:
      config:
        $ref: '#/definitions/datastore.GroupConfig'
      logo_url:
        type: string
      name:
        type: string
    type: object
  models.PortalAPIKeyResponse:
    properties:
      app_id:
        type: string
      group_id:
        type: string
      key:
        type: string
      key_type:
        type: string
      role:
        $ref: '#/definitions/auth.Role'
      url:
        type: string
    type: object
  server.Stub:
    type: object
  server.pagedResponse:
    properties:
      content: {}
      pagination:
        $ref: '#/definitions/datastore.PaginationData'
    type: object
  server.serverResponse:
    properties:
      data:
        items:
          type: integer
        type: array
      message:
        type: string
      status:
        type: boolean
    type: object
host: cloud.staging.getconvoy.io
info:
  contact:
    email: Info@frain.dev
    name: API Support
    url: https://getconvoy.io/docs
  description: Convoy is a fast and secure distributed webhooks service. This document
    contains datastore.s API specification.
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  termsOfService: https://getconvoy.io/terms
  title: Convoy API Specification
  version: 0.1.12
paths:
  /applications:
    get:
      consumes:
      - application/json
      description: This fetches all applications
      parameters:
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      - description: app title
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/datastore.Application'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all applications
      tags:
      - Application
    post:
      consumes:
      - application/json
      description: This endpoint creates an application
      parameters:
      - description: Application Details
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/models.Application'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Application'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an application
      tags:
      - Application
  /applications/{appID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes an app
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete app
      tags:
      - Application
    get:
      consumes:
      - application/json
      description: This endpoint fetches an application by it's id
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Application'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get an application
      tags:
      - Application
    put:
      consumes:
      - application/json
      description: This endpoint updates an application
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      - description: Application Details
        in: body
        name: application
        required: true
        schema:
          $ref: '#/definitions/models.Application'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Application'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update an application
      tags:
      - Application
  /applications/{appID}/endpoints:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an application's endpoints
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Endpoint'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get application endpoints
      tags:
      - Application Endpoints
    post:
      consumes:
      - application/json
      description: This endpoint creates an application endpoint
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      - description: Endpoint Details
        in: body
        name: endpoint
        required: true
        schema:
          $ref: '#/definitions/models.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an application endpoint
      tags:
      - Application Endpoints
  /applications/{appID}/endpoints/{endpointID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes an application endpoint
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete application endpoint
      tags:
      - Application Endpoints
    get:
      consumes:
      - application/json
      description: This endpoint fetches an application endpoint
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get application endpoint
      tags:
      - Application Endpoints
    put:
      consumes:
      - application/json
      description: This endpoint updates an application endpoint
      parameters:
      - description: application id
        in: path
        name: appID
        required: true
        type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        type: string
      - description: Endpoint Details
        in: body
        name: endpoint
        required: true
        schema:
          $ref: '#/definitions/models.Endpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Endpoint'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update an application endpoint
      tags:
      - Application Endpoints
  /eventdeliveries:
    get:
      consumes:
      - application/json
      description: This endpoint fetch event deliveries.
      parameters:
      - description: application id
        in: query
        name: appId
        type: string
      - description: group id
        in: query
        name: groupId
        type: string
      - description: event id
        in: query
        name: eventId
        type: string
      - description: start date
        in: query
        name: startDate
        type: string
      - description: end date
        in: query
        name: endDate
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      - description: status
        in: query
        items:
          type: string
        name: status
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          allOf:
                          - $ref: '#/definitions/datastore.EventDelivery'
                          - properties:
                              data:
                                $ref: '#/definitions/server.Stub'
                            type: object
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get event deliveries
      tags:
      - EventDelivery
  /eventdeliveries/{eventDeliveryID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an event delivery.
      parameters:
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get event delivery
      tags:
      - EventDelivery
  /eventdeliveries/{eventDeliveryID}/resend:
    put:
      consumes:
      - application/json
      description: This endpoint resends an app event
      parameters:
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Resend an app event
      tags:
      - EventDelivery
  /eventdeliveries/batchretry:
    post:
      consumes:
      - application/json
      description: This endpoint resends multiple app events
      parameters:
      - description: event delivery ids
        in: body
        name: ids
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/server.Stub'
          - properties:
              ids:
                items:
                  type: string
                type: array
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Batch Resend app events
      tags:
      - EventDelivery
  /events:
    get:
      consumes:
      - application/json
      description: This endpoint fetches app events with pagination
      parameters:
      - description: application id
        in: query
        name: appId
        type: string
      - description: group id
        in: query
        name: groupId
        type: string
      - description: start date
        in: query
        name: startDate
        type: string
      - description: end date
        in: query
        name: endDate
        type: string
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          allOf:
                          - $ref: '#/definitions/datastore.Event'
                          - properties:
                              data:
                                $ref: '#/definitions/server.Stub'
                            type: object
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get app events with pagination
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: This endpoint creates an app event
      parameters:
      - description: Event Details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create app event
      tags:
      - Events
  /events/{eventID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an app event
      parameters:
      - description: event id
        in: path
        name: eventID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/datastore.Event'
                  - properties:
                      data:
                        $ref: '#/definitions/server.Stub'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get app event
      tags:
      - Events
  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an app message's delivery attempts
      parameters:
      - description: event id
        in: path
        name: eventID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.DeliveryAttempt'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempts
      tags:
      - DeliveryAttempts
  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts/{deliveryAttemptID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an app event delivery attempt
      parameters:
      - description: event id
        in: path
        name: eventID
        required: true
        type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        type: string
      - description: delivery attempt id
        in: path
        name: deliveryAttemptID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.DeliveryAttempt'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempt
      tags:
      - DeliveryAttempts
  /groups:
    get:
      consumes:
      - application/json
      description: This endpoint fetches groups
      parameters:
      - description: group name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/datastore.Group'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get groups
      tags:
      - Group
    post:
      consumes:
      - application/json
      description: This endpoint creates a group
      parameters:
      - description: Group Details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a group
      tags:
      - Group
  /groups/{groupID}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes a group using its id
      parameters:
      - description: Group id
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a group
      tags:
      - Group
    get:
      consumes:
      - application/json
      description: This endpoint fetches a group by its id
      parameters:
      - description: Group id
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a group
      tags:
      - Group
    put:
      consumes:
      - application/json
      description: This endpoint updates a group
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        type: string
      - description: Group Details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.Group'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - Group
  /security/applications/{appID}/keys:
    post:
      consumes:
      - application/json
      description: This endpoint creates an api key that will be used by app portal
      parameters:
      - description: application ID
        in: path
        name: appID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PortalAPIKeyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an api key for app portal
      tags:
      - APIKey
  /security/keys:
    get:
      consumes:
      - application/json
      description: This endpoint fetches multiple api keys
      parameters:
      - description: results per page
        in: query
        name: perPage
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: sort order
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/server.pagedResponse'
                  - properties:
                      content:
                        items:
                          $ref: '#/definitions/datastore.APIKey'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple api keys
      tags:
      - APIKey
    post:
      consumes:
      - application/json
      description: This endpoint creates an api key that will be used by the native
        auth realm
      parameters:
      - description: API Key
        in: body
        name: apiKey
        required: true
        schema:
          $ref: '#/definitions/models.APIKey'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.APIKeyResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create an api key
      tags:
      - APIKey
  /security/keys/{keyID}:
    get:
      consumes:
      - application/json
      description: This endpoint fetches an api key by its id
      parameters:
      - description: API Key id
        in: path
        name: keyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.APIKey'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get api key by id
      tags:
      - APIKey
    put:
      consumes:
      - application/json
      description: This endpoint updates an api key
      parameters:
      - description: API Key id
        in: path
        name: keyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/datastore.APIKey'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: update api key
      tags:
      - APIKey
  /security/keys/{keyID}/revoke:
    put:
      consumes:
      - application/json
      description: This endpoint revokes an api key
      parameters:
      - description: API Key id
        in: path
        name: keyID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/server.serverResponse'
            - properties:
                data:
                  $ref: '#/definitions/server.Stub'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Revoke API Key
      tags:
      - APIKey
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Application related APIs
  name: Application
- description: Endpoint related APIs
  name: Application Endpoints
- description: Event related APIs
  name: Events
- description: API Key related APIs
  name: APIKey
- description: EventDelivery related APIs
  name: EventDelivery
- description: Delivery Attempt related APIs
  name: DeliveryAttempts
- description: Group related APIs
  name: Group
