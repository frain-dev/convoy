components:
  schemas:
    auth.Role:
      properties:
        endpoint:
          type: string
        project:
          type: string
        type:
          type: string
      type: object
    config.SignatureHeaderProvider:
      enum:
      - X-Convoy-Signature
      type: string
      x-enum-varnames:
      - DefaultSignatureHeader
    datastore.AlertConfiguration:
      properties:
        count:
          type: integer
        threshold:
          type: string
      type: object
    datastore.ApiKey:
      properties:
        header_name:
          type: string
        header_value:
          type: string
      type: object
    datastore.BasicAuth:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    datastore.CLIMetadata:
      properties:
        event_type:
          type: string
        host_name:
          type: string
      type: object
    datastore.DeliveryAttempt:
      properties:
        api_version:
          type: string
        created_at:
          type: string
        deleted_at:
          type: string
        endpoint_id:
          type: string
        error:
          type: string
        http_status:
          type: string
        ip_address:
          type: string
        method:
          type: string
        msg_id:
          type: string
        request_http_header:
          $ref: '#/components/schemas/datastore.HttpHeader'
        response_data:
          type: string
        response_http_header:
          $ref: '#/components/schemas/datastore.HttpHeader'
        status:
          type: boolean
        uid:
          type: string
        updated_at:
          type: string
        url:
          type: string
      type: object
    datastore.Device:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        endpoint_id:
          type: string
        host_name:
          type: string
        last_seen_at:
          type: string
        project_id:
          type: string
        status:
          $ref: '#/components/schemas/datastore.DeviceStatus'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.DeviceStatus:
      enum:
      - offline
      - online
      - disabled
      type: string
      x-enum-varnames:
      - DeviceStatusOffline
      - DeviceStatusOnline
      - DeviceStatusDisabled
    datastore.EncodingType:
      enum:
      - base64
      - hex
      type: string
      x-enum-varnames:
      - Base64Encoding
      - HexEncoding
    datastore.Endpoint:
      properties:
        advanced_signatures:
          type: boolean
        authentication:
          $ref: '#/components/schemas/datastore.EndpointAuthentication'
        created_at:
          type: string
        deleted_at:
          type: string
        description:
          type: string
        events:
          type: integer
        http_timeout:
          type: string
        owner_id:
          type: string
        project_id:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/datastore.Secret'
          type: array
        slack_webhook_url:
          type: string
        status:
          $ref: '#/components/schemas/datastore.EndpointStatus'
        support_email:
          type: string
        target_url:
          type: string
        title:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.EndpointAuthentication:
      properties:
        api_key:
          $ref: '#/components/schemas/datastore.ApiKey'
        type:
          $ref: '#/components/schemas/datastore.EndpointAuthenticationType'
      type: object
    datastore.EndpointAuthenticationType:
      enum:
      - api_key
      type: string
      x-enum-varnames:
      - APIKeyAuthentication
    datastore.EndpointStatus:
      enum:
      - active
      - inactive
      - pending
      type: string
      x-enum-varnames:
      - ActiveEndpointStatus
      - InactiveEndpointStatus
      - PendingEndpointStatus
    datastore.Event:
      properties:
        app_id:
          description: Deprecated
          type: string
        created_at:
          type: string
        data:
          description: |-
            Data is an arbitrary JSON value that gets sent as the body of the
            webhook to the endpoints
          items:
            type: integer
          type: array
        deleted_at:
          type: string
        endpoint_metadata:
          items:
            $ref: '#/components/schemas/datastore.Endpoint'
          type: array
        endpoints:
          items:
            type: string
          type: array
        event_type:
          type: string
        headers:
          $ref: '#/components/schemas/httpheader.HTTPHeader'
        matched_endpoints:
          description: TODO(all) remove this field
          type: integer
        project_id:
          type: string
        raw:
          type: string
        source_id:
          type: string
        source_metadata:
          $ref: '#/components/schemas/datastore.Source'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.EventDelivery:
      properties:
        cli_metadata:
          $ref: '#/components/schemas/datastore.CLIMetadata'
        created_at:
          type: string
        deleted_at:
          type: string
        description:
          type: string
        device_id:
          type: string
        endpoint_id:
          type: string
        endpoint_metadata:
          $ref: '#/components/schemas/datastore.Endpoint'
        event_id:
          type: string
        event_metadata:
          $ref: '#/components/schemas/datastore.Event'
        headers:
          $ref: '#/components/schemas/httpheader.HTTPHeader'
        metadata:
          $ref: '#/components/schemas/datastore.Metadata'
        project_id:
          type: string
        status:
          $ref: '#/components/schemas/datastore.EventDeliveryStatus'
        subscription_id:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.EventDeliveryStatus:
      enum:
      - Scheduled
      - Processing
      - Discarded
      - Failure
      - Success
      - Retry
      type: string
      x-enum-varnames:
      - ScheduledEventStatus
      - ProcessingEventStatus
      - DiscardedEventStatus
      - FailureEventStatus
      - SuccessEventStatus
      - RetryEventStatus
    datastore.FilterConfiguration:
      properties:
        event_types:
          items:
            type: string
          type: array
        filter:
          $ref: '#/components/schemas/datastore.FilterSchema'
      type: object
    datastore.FilterSchema:
      properties:
        body:
          additionalProperties: true
          type: object
        headers:
          additionalProperties: true
          type: object
      type: object
    datastore.HMac:
      properties:
        encoding:
          $ref: '#/components/schemas/datastore.EncodingType'
        hash:
          type: string
        header:
          type: string
        secret:
          type: string
      type: object
    datastore.HttpHeader:
      additionalProperties:
        type: string
      type: object
    datastore.Metadata:
      properties:
        data:
          description: Data to be sent to endpoint.
          items:
            type: integer
          type: array
        interval_seconds:
          type: integer
        next_send_time:
          type: integer
        num_trials:
          description: |-
            NumTrials: number of times we have tried to deliver this Event to
            an application
          type: integer
        raw:
          type: string
        retry_limit:
          type: integer
        strategy:
          type: string
      type: object
    datastore.Organisation:
      properties:
        assigned_domain:
          type: string
        created_at:
          type: string
        custom_domain:
          type: string
        deleted_at:
          type: string
        name:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.PaginationData:
      properties:
        next:
          type: integer
        page:
          type: integer
        perPage:
          type: integer
        prev:
          type: integer
        total:
          type: integer
        totalPage:
          type: integer
      type: object
    datastore.Project:
      properties:
        config:
          $ref: '#/components/schemas/datastore.ProjectConfig'
        created_at:
          type: string
        deleted_at:
          type: string
        logo_url:
          type: string
        metadata:
          $ref: '#/components/schemas/datastore.ProjectMetadata'
        name:
          type: string
        organisation_id:
          type: string
        rate_limit:
          description: 'TODO(subomi): refactor this into the Instance API.'
          type: integer
        rate_limit_duration:
          type: string
        statistics:
          $ref: '#/components/schemas/datastore.ProjectStatistics'
        type:
          $ref: '#/components/schemas/datastore.ProjectType'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.ProjectConfig:
      properties:
        is_retention_policy_enabled:
          type: boolean
        max_payload_read_size:
          type: integer
        ratelimit:
          $ref: '#/components/schemas/datastore.RateLimitConfiguration'
        replay_attacks:
          type: boolean
        retention_policy:
          $ref: '#/components/schemas/datastore.RetentionPolicyConfiguration'
        signature:
          $ref: '#/components/schemas/datastore.SignatureConfiguration'
        strategy:
          $ref: '#/components/schemas/datastore.StrategyConfiguration'
      type: object
    datastore.ProjectMetadata:
      properties:
        retained_events:
          type: integer
      type: object
    datastore.ProjectStatistics:
      properties:
        messages_sent:
          type: integer
        total_endpoints:
          type: integer
      type: object
    datastore.ProjectType:
      enum:
      - outgoing
      - incoming
      type: string
      x-enum-varnames:
      - OutgoingProject
      - IncomingProject
    datastore.ProviderConfig:
      properties:
        twitter:
          $ref: '#/components/schemas/datastore.TwitterProviderConfig'
      type: object
    datastore.RateLimitConfiguration:
      properties:
        count:
          type: integer
        duration:
          type: integer
      type: object
    datastore.RetentionPolicyConfiguration:
      properties:
        policy:
          type: string
      type: object
    datastore.RetryConfiguration:
      properties:
        duration:
          type: integer
        retry_count:
          type: integer
        type:
          type: string
      type: object
    datastore.Secret:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        expires_at:
          type: string
        uid:
          type: string
        updated_at:
          type: string
        value:
          type: string
      type: object
    datastore.SignatureConfiguration:
      properties:
        header:
          $ref: '#/components/schemas/config.SignatureHeaderProvider'
        versions:
          items:
            $ref: '#/components/schemas/datastore.SignatureVersion'
          type: array
      type: object
    datastore.SignatureVersion:
      properties:
        created_at:
          type: string
        encoding:
          $ref: '#/components/schemas/datastore.EncodingType'
        hash:
          type: string
        uid:
          type: string
      type: object
    datastore.Source:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        forward_headers:
          items:
            type: string
          type: array
        is_disabled:
          type: boolean
        mask_id:
          type: string
        name:
          type: string
        project_id:
          type: string
        provider:
          $ref: '#/components/schemas/datastore.SourceProvider'
        provider_config:
          $ref: '#/components/schemas/datastore.ProviderConfig'
        type:
          $ref: '#/components/schemas/datastore.SourceType'
        uid:
          type: string
        updated_at:
          type: string
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    datastore.SourceProvider:
      enum:
      - github
      - twitter
      - shopify
      type: string
      x-enum-varnames:
      - GithubSourceProvider
      - TwitterSourceProvider
      - ShopifySourceProvider
    datastore.SourceType:
      enum:
      - http
      - rest_api
      - pub_sub
      - db_change_stream
      type: string
      x-enum-varnames:
      - HTTPSource
      - RestApiSource
      - PubSubSource
      - DBChangeStream
    datastore.StrategyConfiguration:
      properties:
        duration:
          type: integer
        retry_count:
          type: integer
        type:
          type: string
      type: object
    datastore.Subscription:
      properties:
        alert_config:
          allOf:
          - $ref: '#/components/schemas/datastore.AlertConfiguration'
          description: subscription config
        created_at:
          type: string
        deleted_at:
          type: string
        device_id:
          type: string
        endpoint_metadata:
          $ref: '#/components/schemas/datastore.Endpoint'
        filter_config:
          $ref: '#/components/schemas/datastore.FilterConfiguration'
        name:
          type: string
        rate_limit_config:
          $ref: '#/components/schemas/datastore.RateLimitConfiguration'
        retry_config:
          $ref: '#/components/schemas/datastore.RetryConfiguration'
        source_metadata:
          $ref: '#/components/schemas/datastore.Source'
        type:
          $ref: '#/components/schemas/datastore.SubscriptionType'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.SubscriptionType:
      enum:
      - cli
      - api
      type: string
      x-enum-varnames:
      - SubscriptionTypeCLI
      - SubscriptionTypeAPI
    datastore.TwitterProviderConfig:
      properties:
        crc_verified_at:
          type: integer
      type: object
    datastore.User:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        first_name:
          type: string
        last_name:
          type: string
        reset_password_expires_at:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.VerifierConfig:
      properties:
        api_key:
          $ref: '#/components/schemas/datastore.ApiKey'
        basic_auth:
          $ref: '#/components/schemas/datastore.BasicAuth'
        hmac:
          $ref: '#/components/schemas/datastore.HMac'
        type:
          $ref: '#/components/schemas/datastore.VerifierType'
      type: object
    datastore.VerifierType:
      enum:
      - noop
      - hmac
      - basic_auth
      - api_key
      type: string
      x-enum-varnames:
      - NoopVerifier
      - HMacVerifier
      - BasicAuthVerifier
      - APIKeyVerifier
    httpheader.HTTPHeader:
      additionalProperties:
        items:
          type: string
        type: array
      type: object
    models.Endpoint:
      properties:
        advanced_signatures:
          type: boolean
        appID:
          description: Deprecated but necessary for backward compatibility
          type: string
        authentication:
          $ref: '#/components/schemas/datastore.EndpointAuthentication'
        description:
          type: string
        http_timeout:
          type: string
        is_disabled:
          type: boolean
        name:
          type: string
        owner_id:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        secret:
          type: string
        slack_webhook_url:
          type: string
        support_email:
          type: string
        url:
          type: string
      type: object
    models.Event:
      properties:
        app_id:
          type: string
        custom_headers:
          additionalProperties:
            type: string
          type: object
        data:
          description: |-
            Data is an arbitrary JSON value that gets sent as the body of the
            webhook to the endpoints
          items:
            type: integer
          type: array
        endpoint_id:
          type: string
        event_type:
          type: string
      type: object
    models.FanoutEvent:
      properties:
        custom_headers:
          additionalProperties:
            type: string
          type: object
        data:
          description: |-
            Data is an arbitrary JSON value that gets sent as the body of the
            webhook to the endpoints
          items:
            type: integer
          type: array
        event_type:
          type: string
        owner_id:
          type: string
      type: object
    models.FilterSchema:
      properties:
        body:
          additionalProperties: true
          type: object
        header:
          additionalProperties: true
          type: object
      type: object
    models.PortalAPIKeyResponse:
      properties:
        endpoint_id:
          type: string
        key:
          type: string
        key_type:
          type: string
        project_id:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        url:
          type: string
      type: object
    models.PortalLink:
      properties:
        endpoints:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    models.PortalLinkResponse:
      properties:
        created_at:
          type: integer
        deleted_at:
          type: integer
        endpoint_count:
          type: integer
        endpoints:
          items:
            type: string
          type: array
        endpoints_metadata:
          items:
            $ref: '#/components/schemas/datastore.Endpoint'
          type: array
        name:
          type: string
        project_id:
          type: string
        token:
          type: string
        uid:
          type: string
        updated_at:
          type: integer
        url:
          type: string
      type: object
    models.Project:
      properties:
        config:
          $ref: '#/components/schemas/datastore.ProjectConfig'
        logo_url:
          type: string
        name:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        type:
          $ref: '#/components/schemas/datastore.ProjectType'
      type: object
    models.ResetPassword:
      properties:
        password:
          type: string
        password_confirmation:
          type: string
      type: object
    models.RetryConfiguration:
      properties:
        duration:
          type: string
        interval_seconds:
          type: integer
        retry_count:
          type: integer
        type:
          type: string
      type: object
    models.Source:
      properties:
        is_disabled:
          type: boolean
        name:
          type: string
        provider:
          $ref: '#/components/schemas/datastore.SourceProvider'
        type:
          $ref: '#/components/schemas/datastore.SourceType'
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    models.SourceResponse:
      properties:
        created_at:
          type: integer
        deleted_at:
          type: integer
        is_disabled:
          type: boolean
        mask_id:
          type: string
        name:
          type: string
        project_id:
          type: string
        provider:
          $ref: '#/components/schemas/datastore.SourceProvider'
        provider_config:
          $ref: '#/components/schemas/datastore.ProviderConfig'
        type:
          $ref: '#/components/schemas/datastore.SourceType'
        uid:
          type: string
        updated_at:
          type: integer
        url:
          type: string
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    models.Subscription:
      properties:
        alert_config:
          $ref: '#/components/schemas/datastore.AlertConfiguration'
        app_id:
          description: Deprecated but necessary for backward compatibility
          type: string
        endpoint_id:
          type: string
        filter_config:
          $ref: '#/components/schemas/datastore.FilterConfiguration'
        name:
          type: string
        rate_limit_config:
          $ref: '#/components/schemas/datastore.RateLimitConfiguration'
        retry_config:
          $ref: '#/components/schemas/models.RetryConfiguration'
        source_id:
          type: string
      type: object
    models.TestFilter:
      properties:
        request:
          $ref: '#/components/schemas/models.FilterSchema'
        schema:
          $ref: '#/components/schemas/models.FilterSchema'
      type: object
    server.Stub:
      type: object
    server.pagedResponse:
      properties:
        content: {}
        pagination:
          $ref: '#/components/schemas/datastore.PaginationData'
      type: object
    util.ServerResponse:
      properties:
        data:
          items:
            type: integer
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
info:
  contact:
    email: support@getconvoy.io
    name: Convoy Support
    url: https://getconvoy.io/docs
  description: Convoy is a fast and secure webhooks proxy. This document contains
    datastore.s API specification.
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  termsOfService: https://getconvoy.io/terms
  title: Convoy API Reference
  version: 0.8.0
openapi: 3.0.3
paths:
  /api/v1/organisations:
    get:
      description: This endpoint fetches the organisations a user is part of, this
        route can only be accessed with a personal api key
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Organisation'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get organisations
      tags:
      - Organisations
  /api/v1/projects:
    get:
      description: This endpoint fetches projects
      parameters:
      - description: Project name
        in: query
        name: name
        schema:
          type: string
      - description: organisation id
        in: query
        name: orgID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Project'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get projects
      tags:
      - Projects
    post:
      description: This endpoint creates a project
      parameters:
      - description: Organisation id
        in: query
        name: orgID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Project'
        description: Project Details
        required: true
        x-originalParamName: project
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Project'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a project
      tags:
      - Projects
  /api/v1/projects/{projectID}:
    delete:
      description: This endpoint deletes a project using its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a project
      tags:
      - Projects
    get:
      description: This endpoint fetches a project by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Project'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a project
      tags:
      - Projects
    put:
      description: This endpoint updates a project
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Project'
        description: Project Details
        required: true
        x-originalParamName: project
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Project'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a project
      tags:
      - Projects
  /api/v1/projects/{projectID}/endpoints:
    get:
      description: This endpoint fetches an endpoints
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Endpoint'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get endpoints
      tags:
      - Endpoints
    post:
      description: This endpoint creates an endpoint
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Endpoint'
        description: Endpoint Details
        required: true
        x-originalParamName: endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an endpoint
      tags:
      - Endpoints
  /api/v1/projects/{projectID}/endpoints/{endpointID}:
    delete:
      description: This endpoint deletes an endpoint
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete endpoint
      tags:
      - Endpoints
    get:
      description: This endpoint fetches an endpoint
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get endpoint
      tags:
      - Endpoints
    put:
      description: This endpoint updates an endpoint
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Endpoint'
        description: Endpoint Details
        required: true
        x-originalParamName: endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update an endpoint
      tags:
      - Endpoints
  /api/v1/projects/{projectID}/endpoints/{endpointID}/expire_secret:
    put:
      description: This endpoint expires the current endpoint secret and generates
        a new one.
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Expire and generate new application endpoint secret
      tags:
      - Endpoints
  /api/v1/projects/{projectID}/endpoints/{endpointID}/toggle_status:
    put:
      description: This endpoint updates a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Toggles an endpoint's status from active <-> inactive
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/eventdeliveries:
    get:
      description: This endpoint fetch event deliveries.
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event id
        in: query
        name: eventId
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: status
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              allOf:
                              - $ref: '#/components/schemas/datastore.EventDelivery'
                              - properties:
                                  data:
                                    $ref: '#/components/schemas/server.Stub'
                                type: object
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get event deliveries
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}:
    get:
      description: This endpoint fetches an event delivery.
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get event delivery
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/deliveryattempts:
    get:
      description: This endpoint fetches an app message's delivery attempts
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.DeliveryAttempt'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempts
      tags:
      - DeliveryAttempts
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/deliveryattempts/{deliveryAttemptID}:
    get:
      description: This endpoint fetches an app event delivery attempt
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      - description: delivery attempt id
        in: path
        name: deliveryAttemptID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.DeliveryAttempt'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempt
      tags:
      - DeliveryAttempts
  /api/v1/projects/{projectID}/eventdeliveries/{eventDeliveryID}/resend:
    put:
      description: This endpoint resends an app event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Resend an app event
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/eventdeliveries/batchretry:
    post:
      description: This endpoint resends multiple app events
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/server.Stub'
              - properties:
                  ids:
                    items:
                      type: string
                    type: array
                type: object
        description: event delivery ids
        required: true
        x-originalParamName: deliveryIds
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Batch Resend app events
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/eventdeliveries/countbatchretryevents:
    get:
      description: This endpoint counts app events that will be affected by a batch
        retry operation
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.Stub'
                      - properties:
                          num:
                            type: integer
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Count affected eventDeliveries
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/eventdeliveries/forceresend:
    post:
      description: This endpoint force resends multiple app events
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/server.Stub'
              - properties:
                  ids:
                    items:
                      type: string
                    type: array
                type: object
        description: event delivery ids
        required: true
        x-originalParamName: deliveryIds
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Force Resend app events
      tags:
      - EventDeliveries
  /api/v1/projects/{projectID}/events:
    get:
      description: This endpoint fetches app events with pagination
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: source id
        in: query
        name: sourceId
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              allOf:
                              - $ref: '#/components/schemas/datastore.Event'
                              - properties:
                                  data:
                                    $ref: '#/components/schemas/server.Stub'
                                type: object
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get app events with pagination
      tags:
      - Events
    post:
      description: This endpoint creates an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Event'
        description: Event Details
        required: true
        x-originalParamName: event
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/{eventID}:
    get:
      description: This endpoint fetches an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/{eventID}/replay:
    put:
      description: This endpoint replays an endpoint event
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Replay endpoint event
      tags:
      - Events
  /api/v1/projects/{projectID}/events/batchreplay:
    post:
      description: This endpoint replays multiple events
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: Source id
        in: query
        name: source
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Replays multiple endpoint events
      tags:
      - Events
  /api/v1/projects/{projectID}/events/countbatchreplayevents:
    get:
      description: This endpoint counts events that will be affected by a batch replay
        operation
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: Source id
        in: query
        name: source
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.Stub'
                      - properties:
                          num:
                            type: integer
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Counts affected events
      tags:
      - Events
  /api/v1/projects/{projectID}/events/fanout:
    post:
      description: This endpoint uses the owner_id to fan out an event to multiple
        endpoints.
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.FanoutEvent'
        description: Event Details
        required: true
        x-originalParamName: event
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fan out an event to multiple endpoints.
      tags:
      - Events
  /api/v1/projects/{projectID}/portal-links:
    get:
      description: This endpoint fetches multiple portal links
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/models.PortalLinkResponse'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple portal links
      tags:
      - PortalLinks
    post:
      description: This endpoint creates a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.PortalLink'
        description: Portal Link Details
        required: true
        x-originalParamName: portallink
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.PortalLinkResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a portal link
      tags:
      - PortalLinks
  /api/v1/projects/{projectID}/portal-links/{portalLinkID}:
    get:
      description: This endpoint fetches a portal link by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.PortalLinkResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a portal link
      tags:
      - PortalLinks
    put:
      description: This endpoint updates a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.PortalLink'
        description: Portal Link Details
        required: true
        x-originalParamName: portallink
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.PortalLinkResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a portal link
      tags:
      - PortalLinks
  /api/v1/projects/{projectID}/portal-links/{portalLinkID}/revoke:
    put:
      description: This endpoint revokes a portal link
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: portal link id
        in: path
        name: portalLinkID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Revoke Portal Link
      tags:
      - PortalLinks
  /api/v1/projects/{projectID}/sources:
    get:
      description: This endpoint fetches multiple sources
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/models.SourceResponse'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple sources
      tags:
      - Sources
    post:
      description: This endpoint creates a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Source'
        description: Source Details
        required: true
        x-originalParamName: source
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a source
      tags:
      - Sources
  /api/v1/projects/{projectID}/sources/{sourceID}:
    delete:
      description: This endpoint deletes a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete source
      tags:
      - Sources
    get:
      description: This endpoint fetches a source by its id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a source
      tags:
      - Sources
    put:
      description: This endpoint updates a source
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Source'
        description: Source Details
        required: true
        x-originalParamName: source
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a source
      tags:
      - Sources
  /api/v1/projects/{projectID}/subscriptions:
    get:
      description: This endpoint fetches all the subscriptions
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: subscription title
        in: query
        name: q
        schema:
          type: string
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Subscription'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all subscriptions
      tags:
      - Subscriptions
    post:
      description: This endpoint creates a subscriptions
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Subscription'
        description: Subscription details
        required: true
        x-originalParamName: subscription
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Subscription'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Creates a subscription
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/{subscriptionID}:
    delete:
      description: This endpoint deletes a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete subscription
      tags:
      - Subscriptions
    get:
      description: This endpoint fetches an Subscription by it's id
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Gets a subscription
      tags:
      - Subscriptions
    put:
      description: This endpoint updates a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Subscription'
        description: Subscription Details
        required: true
        x-originalParamName: subscription
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a subscription
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/{subscriptionID}/toggle_status:
    put:
      description: This endpoint updates a subscription
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Toggles a subscription's status from active <-> inactive
      tags:
      - Subscriptions
  /api/v1/projects/{projectID}/subscriptions/test_filter:
    post:
      description: This endpoint tests a subscription's filter
      parameters:
      - description: Project id
        in: path
        name: projectID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.TestFilter'
        description: Filter Details
        required: true
        x-originalParamName: filter
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      type: boolean
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Test subscription filter
      tags:
      - Subscriptions
  /portal/devices:
    get:
      description: This endpoint fetches all portal link devices
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Device'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Get portal link devices
      tags:
      - PortalLinks
  /portal/endpoints:
    get:
      description: This endpoint fetches all portal link endpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Endpoint'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Get endpoints
      tags:
      - PortalLinks
    post:
      description: This endpoint creates an endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Endpoint'
        description: Endpoint Details
        required: true
        x-originalParamName: endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Create an endpoint
      tags:
      - PortalLinks
  /portal/keys:
    get:
      description: This endpoint fetches all portal link endpoints keys
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.PortalAPIKeyResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Get portal link keys
      tags:
      - PortalLinks
  /ui/users/forgot-password:
    post:
      description: This endpoint verifies a user's email
      parameters:
      - description: Email verification token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Verify Email
      tags:
      - User
  /ui/users/reset-password:
    post:
      description: This endpoint resets a users password
      parameters:
      - description: reset token
        in: query
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.ResetPassword'
        description: Reset Password Details
        required: true
        x-originalParamName: password
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/util.ServerResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Reset user password
      tags:
      - User
servers:
- url: https://dashboard.getconvoy.io/
tags:
- description: Organisation related APIs
  name: Organisations
- description: Subscription related APIs
  name: Subscriptions
- description: Endpoint related APIs
  name: Endpoints
- description: Event related APIs
  name: Events
- description: Source related APIs
  name: Sources
- description: EventDelivery related APIs
  name: EventDeliveries
- description: Delivery Attempt related APIs
  name: DeliveryAttempts
- description: Project related APIs
  name: Projects
- description: Portal Links related APIs
  name: PortalLinks
