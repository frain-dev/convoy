components:
  schemas:
    auth.Role:
      properties:
        app:
          type: string
        group:
          type: string
        type:
          type: string
      type: object
    datastore.APIKey:
      properties:
        created_at:
          type: integer
        deleted_at:
          type: integer
        expires_at:
          type: integer
        hash:
          type: string
        key_type:
          type: string
        mask_id:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        salt:
          type: string
        uid:
          type: string
        updated_at:
          type: integer
      type: object
    datastore.AlertConfiguration:
      properties:
        count:
          type: integer
        threshold:
          type: string
      type: object
    datastore.ApiKey:
      properties:
        header_name:
          type: string
        header_value:
          type: string
      type: object
    datastore.Application:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/datastore.Endpoint'
          type: array
        events:
          type: integer
        group_id:
          type: string
        is_disabled:
          type: boolean
        name:
          type: string
        slack_webhook_url:
          type: string
        support_email:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.BasicAuth:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    datastore.DeliveryAttempt:
      properties:
        api_version:
          type: string
        created_at:
          type: string
        deleted_at:
          type: string
        endpoint_id:
          type: string
        error:
          type: string
        http_status:
          type: string
        ip_address:
          type: string
        method:
          type: string
        msg_id:
          type: string
        request_http_header:
          $ref: '#/components/schemas/datastore.HttpHeader'
        response_data:
          type: string
        response_http_header:
          $ref: '#/components/schemas/datastore.HttpHeader'
        status:
          type: boolean
        uid:
          type: string
        updated_at:
          type: string
        url:
          type: string
      type: object
    datastore.Endpoint:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        description:
          type: string
        http_timeout:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        secret:
          type: string
        target_url:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.Event:
      properties:
        app_id:
          type: string
        app_metadata:
          $ref: '#/components/schemas/datastore.Application'
        created_at:
          type: string
        data:
          description: |-
            Data is an arbitrary JSON value that gets sent as the body of the
            webhook to the endpoints
          items:
            type: integer
          type: array
        deleted_at:
          type: string
        event_type:
          type: string
        forwarded_headers:
          $ref: '#/components/schemas/datastore.HttpHeader'
        group_id:
          type: string
        matched_endpoints:
          description: TODO(all) remove this field
          type: integer
        provider_id:
          description: |-
            ProviderID is a custom ID that can be used to reconcile this Event
            with your internal systems.
            This is optional
            If not provided, we will generate one for you
          type: string
        source_id:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.EventDelivery:
      properties:
        app_id:
          type: string
        app_metadata:
          $ref: '#/components/schemas/datastore.Application'
        created_at:
          type: string
        deleted_at:
          type: string
        description:
          type: string
        endpoint_id:
          type: string
        endpoint_metadata:
          $ref: '#/components/schemas/datastore.Endpoint'
        event_id:
          type: string
        event_metadata:
          $ref: '#/components/schemas/datastore.Event'
        forwarded_headers:
          $ref: '#/components/schemas/datastore.HttpHeader'
        group_id:
          type: string
        metadata:
          $ref: '#/components/schemas/datastore.Metadata'
        status:
          type: string
        subscription_id:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.FilterConfiguration:
      properties:
        event_types:
          items:
            type: string
          type: array
      type: object
    datastore.Group:
      properties:
        config:
          $ref: '#/components/schemas/datastore.GroupConfig'
        created_at:
          type: string
        deleted_at:
          type: string
        logo_url:
          type: string
        metadata:
          $ref: '#/components/schemas/datastore.GroupMetadata'
        name:
          type: string
        organisation_id:
          type: string
        rate_limit:
          description: 'TODO(subomi): refactor this into the Instance API.'
          type: integer
        rate_limit_duration:
          type: string
        statistics:
          $ref: '#/components/schemas/datastore.GroupStatistics'
        type:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.GroupConfig:
      properties:
        disable_endpoint:
          type: boolean
        is_retention_policy_enabled:
          type: boolean
        ratelimit:
          $ref: '#/components/schemas/datastore.RateLimitConfiguration'
        replay_attacks:
          type: boolean
        retention_policy:
          $ref: '#/components/schemas/datastore.RetentionPolicyConfiguration'
        signature:
          $ref: '#/components/schemas/datastore.SignatureConfiguration'
        strategy:
          $ref: '#/components/schemas/datastore.StrategyConfiguration'
      type: object
    datastore.GroupMetadata:
      properties:
        retained_events:
          type: integer
      type: object
    datastore.GroupStatistics:
      properties:
        messages_sent:
          type: integer
        total_apps:
          type: integer
      type: object
    datastore.HMac:
      properties:
        encoding:
          type: string
        hash:
          type: string
        header:
          type: string
        secret:
          type: string
      type: object
    datastore.HttpHeader:
      additionalProperties:
        type: string
      type: object
    datastore.Metadata:
      properties:
        data:
          description: Data to be sent to endpoint.
          items:
            type: integer
          type: array
        interval_seconds:
          type: integer
        next_send_time:
          description: |-
            NextSendTime denotes the next time a Event will be published in
            case it failed the first time
          type: integer
        num_trials:
          description: |-
            NumTrials: number of times we have tried to deliver this Event to
            an application
          type: integer
        retry_limit:
          type: integer
        strategy:
          type: string
      type: object
    datastore.OnPremStorage:
      properties:
        path:
          type: string
      type: object
    datastore.Organisation:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        name:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.OrganisationInvite:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        invitee_email:
          type: string
        organisation_id:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        status:
          type: string
        token:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.OrganisationMember:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        organisation_id:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        uid:
          type: string
        updated_at:
          type: string
        user_id:
          type: string
        user_metadata:
          $ref: '#/components/schemas/datastore.UserMetadata'
      type: object
    datastore.PaginationData:
      properties:
        next:
          type: integer
        page:
          type: integer
        perPage:
          type: integer
        prev:
          type: integer
        total:
          type: integer
        totalPage:
          type: integer
      type: object
    datastore.ProviderConfig:
      properties:
        twitter:
          $ref: '#/components/schemas/datastore.TwitterProviderConfig'
      type: object
    datastore.RateLimitConfiguration:
      properties:
        count:
          type: integer
        duration:
          type: string
      type: object
    datastore.RetentionPolicyConfiguration:
      properties:
        policy:
          type: string
      type: object
    datastore.RetryConfiguration:
      properties:
        duration:
          type: string
        retry_count:
          type: integer
        type:
          type: string
      type: object
    datastore.S3Storage:
      properties:
        bucket:
          type: string
        region:
          type: string
      type: object
    datastore.SignatureConfiguration:
      properties:
        hash:
          type: string
        header:
          type: string
      type: object
    datastore.Source:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        forward_headers:
          items:
            type: string
          type: array
        group_id:
          type: string
        is_disabled:
          type: boolean
        mask_id:
          type: string
        name:
          type: string
        provider:
          type: string
        provider_config:
          $ref: '#/components/schemas/datastore.ProviderConfig'
        type:
          type: string
        uid:
          type: string
        updated_at:
          type: string
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    datastore.StoragePolicyConfiguration:
      properties:
        on_prem:
          $ref: '#/components/schemas/datastore.OnPremStorage'
        s3:
          $ref: '#/components/schemas/datastore.S3Storage'
        type:
          type: string
      type: object
    datastore.StrategyConfiguration:
      properties:
        duration:
          type: integer
        retry_count:
          type: integer
        type:
          type: string
      type: object
    datastore.Subscription:
      properties:
        alert_config:
          $ref: '#/components/schemas/datastore.AlertConfiguration'
        app_metadata:
          $ref: '#/components/schemas/datastore.Application'
        created_at:
          type: string
        deleted_at:
          type: string
        endpoint_metadata:
          $ref: '#/components/schemas/datastore.Endpoint'
        filter_config:
          $ref: '#/components/schemas/datastore.FilterConfiguration'
        name:
          type: string
        retry_config:
          $ref: '#/components/schemas/datastore.RetryConfiguration'
        source_metadata:
          $ref: '#/components/schemas/datastore.Source'
        status:
          type: string
        type:
          type: string
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.TwitterProviderConfig:
      properties:
        crc_verified_at:
          type: integer
      type: object
    datastore.User:
      properties:
        created_at:
          type: string
        deleted_at:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        reset_password_expires_at:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        uid:
          type: string
        updated_at:
          type: string
      type: object
    datastore.UserMetadata:
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    datastore.VerifierConfig:
      properties:
        api_key:
          $ref: '#/components/schemas/datastore.ApiKey'
        basic_auth:
          $ref: '#/components/schemas/datastore.BasicAuth'
        hmac:
          $ref: '#/components/schemas/datastore.HMac'
        type:
          type: string
      type: object
    models.APIKey:
      properties:
        expires_at:
          type: string
        key_type:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/models.Role'
      type: object
    models.APIKeyResponse:
      properties:
        created_at:
          type: string
        expires_at:
          type: string
        key:
          type: string
        key_type:
          type: string
        name:
          type: string
        role:
          $ref: '#/components/schemas/models.Role'
        uid:
          type: string
      type: object
    models.Application:
      properties:
        is_disabled:
          type: boolean
        name:
          type: string
        slack_webhook_url:
          type: string
        support_email:
          type: string
      type: object
    models.Configuration:
      properties:
        is_analytics_enabled:
          type: boolean
        storage_policy:
          $ref: '#/components/schemas/datastore.StoragePolicyConfiguration'
      type: object
    models.ConfigurationResponse:
      properties:
        api_version:
          type: string
        created_at:
          type: integer
        deleted_at:
          type: integer
        is_analytics_enabled:
          type: boolean
        storage_policy:
          $ref: '#/components/schemas/datastore.StoragePolicyConfiguration'
        uid:
          type: string
        updated_at:
          type: integer
      type: object
    models.Endpoint:
      properties:
        description:
          type: string
        events:
          items:
            type: string
          type: array
        http_timeout:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        secret:
          type: string
        url:
          type: string
      type: object
    models.Event:
      properties:
        app_id:
          type: string
        data:
          description: |-
            Data is an arbitrary JSON value that gets sent as the body of the
            webhook to the endpoints
          items:
            type: integer
          type: array
        event_type:
          type: string
      type: object
    models.ForgotPassword:
      properties:
        email:
          type: string
      type: object
    models.Group:
      properties:
        config:
          $ref: '#/components/schemas/datastore.GroupConfig'
        logo_url:
          type: string
        name:
          type: string
        rate_limit:
          type: integer
        rate_limit_duration:
          type: string
        type:
          type: string
      type: object
    models.LoginUser:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    models.LoginUserResponse:
      properties:
        created_at:
          type: integer
        deleted_at:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        token:
          $ref: '#/components/schemas/models.Token'
        uid:
          type: string
        updated_at:
          type: integer
      type: object
    models.Organisation:
      properties:
        name:
          type: string
      type: object
    models.OrganisationInvite:
      properties:
        invitee_email:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
      type: object
    models.PortalAPIKeyResponse:
      properties:
        app_id:
          type: string
        group_id:
          type: string
        key:
          type: string
        key_type:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
        url:
          type: string
      type: object
    models.ResetPassword:
      properties:
        password:
          type: string
        password_confirmation:
          type: string
      type: object
    models.Role:
      properties:
        app:
          type: string
        group:
          type: string
        type:
          type: string
      type: object
    models.Source:
      properties:
        forward_headers:
          items:
            type: string
          type: array
        is_disabled:
          type: boolean
        name:
          type: string
        provider:
          type: string
        type:
          type: string
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    models.SourceResponse:
      properties:
        created_at:
          type: integer
        deleted_at:
          type: integer
        group_id:
          type: string
        is_disabled:
          type: boolean
        mask_id:
          type: string
        name:
          type: string
        provider:
          type: string
        provider_config:
          $ref: '#/components/schemas/datastore.ProviderConfig'
        type:
          type: string
        uid:
          type: string
        updated_at:
          type: integer
        url:
          type: string
        verifier:
          $ref: '#/components/schemas/datastore.VerifierConfig'
      type: object
    models.Subscription:
      properties:
        alert_config:
          $ref: '#/components/schemas/datastore.AlertConfiguration'
        app_id:
          type: string
        endpoint_id:
          type: string
        filter_config:
          $ref: '#/components/schemas/datastore.FilterConfiguration'
        name:
          type: string
        retry_config:
          $ref: '#/components/schemas/datastore.RetryConfiguration'
        source_id:
          type: string
        type:
          type: string
      type: object
    models.Token:
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      type: object
    models.UpdateOrganisationMember:
      properties:
        role:
          $ref: '#/components/schemas/auth.Role'
      type: object
    models.UpdatePassword:
      properties:
        current_password:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      type: object
    models.UpdateUser:
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    models.User:
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/auth.Role'
      type: object
    server.Stub:
      type: object
    server.pagedResponse:
      properties:
        content: {}
        pagination:
          $ref: '#/components/schemas/datastore.PaginationData'
      type: object
    server.serverResponse:
      properties:
        data:
          items:
            type: integer
          type: array
        message:
          type: string
        status:
          type: boolean
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
info:
  contact:
    email: Info@frain.dev
    name: API Support
    url: https://getconvoy.io/docs
  description: Convoy is a fast and secure distributed webhooks service. This document
    contains datastore.s API specification.
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
  termsOfService: https://getconvoy.io/terms
  title: Convoy API Specification
  version: 0.1.12
openapi: 3.0.3
paths:
  /applications:
    get:
      description: This fetches all applications
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: app title
        in: query
        name: q
        schema:
          type: string
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Application'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all applications
      tags:
      - Application
    post:
      description: This endpoint creates an application
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Application'
        description: Application Details
        required: true
        x-originalParamName: application
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Application'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an application
      tags:
      - Application
  /applications/{appID}:
    delete:
      description: This endpoint deletes an app
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete app
      tags:
      - Application
    get:
      description: This endpoint fetches an application by it's id
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Application'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get an application
      tags:
      - Application
    put:
      description: This endpoint updates an application
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Application'
        description: Application Details
        required: true
        x-originalParamName: application
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Application'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update an application
      tags:
      - Application
  /applications/{appID}/endpoints:
    get:
      description: This endpoint fetches an application's endpoints
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Endpoint'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get application endpoints
      tags:
      - Application Endpoints
    post:
      description: This endpoint creates an application endpoint
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Endpoint'
        description: Endpoint Details
        required: true
        x-originalParamName: endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an application endpoint
      tags:
      - Application Endpoints
  /applications/{appID}/endpoints/{endpointID}:
    delete:
      description: This endpoint deletes an application endpoint
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete application endpoint
      tags:
      - Application Endpoints
    get:
      description: This endpoint fetches an application endpoint
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get application endpoint
      tags:
      - Application Endpoints
    put:
      description: This endpoint updates an application endpoint
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: appID
        required: true
        schema:
          type: string
      - description: endpoint id
        in: path
        name: endpointID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Endpoint'
        description: Endpoint Details
        required: true
        x-originalParamName: endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Endpoint'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update an application endpoint
      tags:
      - Application Endpoints
  /auth/login:
    post:
      description: This endpoint logs in a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.LoginUser'
        description: User Details
        required: true
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.LoginUserResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Login a user
      tags:
      - User
  /auth/logout:
    post:
      description: This endpoint logs out a user
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Logs out a user
      tags:
      - User
  /auth/token/refresh:
    post:
      description: This endpoint refreshes an access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Token'
        description: Token Details
        required: true
        x-originalParamName: token
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.Token'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Refresh an access token
      tags:
      - User
  /configuration:
    get:
      description: This endpoint fetches configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/models.ConfigurationResponse'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch configuration
      tags:
      - Source
    post:
      description: This endpoint creates a configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Configuration'
        description: Configuration Details
        required: true
        x-originalParamName: application
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.ConfigurationResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a configuration
      tags:
      - Application
    put:
      description: This endpoint updates configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Configuration'
        description: Configuration Details
        required: true
        x-originalParamName: application
      responses:
        "202":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.ConfigurationResponse'
                  type: object
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update configuration
      tags:
      - Application
  /eventdeliveries:
    get:
      description: This endpoint fetch event deliveries.
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: event id
        in: query
        name: eventId
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: status
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              allOf:
                              - $ref: '#/components/schemas/datastore.EventDelivery'
                              - properties:
                                  data:
                                    $ref: '#/components/schemas/server.Stub'
                                type: object
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get event deliveries
      tags:
      - EventDelivery
  /eventdeliveries/{eventDeliveryID}:
    get:
      description: This endpoint fetches an event delivery.
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get event delivery
      tags:
      - EventDelivery
  /eventdeliveries/{eventDeliveryID}/resend:
    put:
      description: This endpoint resends an app event
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Resend an app event
      tags:
      - EventDelivery
  /eventdeliveries/batchretry:
    post:
      description: This endpoint resends multiple app events
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/server.Stub'
              - properties:
                  ids:
                    items:
                      type: string
                    type: array
                type: object
        description: event delivery ids
        required: true
        x-originalParamName: ids
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Batch Resend app events
      tags:
      - EventDelivery
  /eventdeliveries/countbatchretryevents:
    get:
      description: This endpoint counts app events that will be affected by a batch
        retry operation
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: group Id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.Stub'
                      - properties:
                          num:
                            type: integer
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Count affected eventDeliveries
      tags:
      - EventDelivery
  /eventdeliveries/forceresend:
    post:
      description: This endpoint force resends multiple app events
      parameters:
      - description: group Id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/server.Stub'
              - properties:
                  ids:
                    items:
                      type: string
                    type: array
                type: object
        description: event delivery ids
        required: true
        x-originalParamName: ids
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Force Resend app events
      tags:
      - EventDelivery
  /events:
    get:
      description: This endpoint fetches app events with pagination
      parameters:
      - description: application id
        in: query
        name: appId
        schema:
          type: string
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: start date
        in: query
        name: startDate
        schema:
          type: string
      - description: end date
        in: query
        name: endDate
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              allOf:
                              - $ref: '#/components/schemas/datastore.Event'
                              - properties:
                                  data:
                                    $ref: '#/components/schemas/server.Stub'
                                type: object
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get app events with pagination
      tags:
      - Events
    post:
      description: This endpoint creates an app event
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Event'
        description: Event Details
        required: true
        x-originalParamName: event
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create app event
      tags:
      - Events
  /events/{eventID}:
    get:
      description: This endpoint fetches an app event
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get app event
      tags:
      - Events
  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts:
    get:
      description: This endpoint fetches an app message's delivery attempts
      parameters:
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.DeliveryAttempt'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempts
      tags:
      - DeliveryAttempts
  /events/{eventID}/eventdeliveries/{eventDeliveryID}/deliveryattempts/{deliveryAttemptID}:
    get:
      description: This endpoint fetches an app event delivery attempt
      parameters:
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      - description: event delivery id
        in: path
        name: eventDeliveryID
        required: true
        schema:
          type: string
      - description: delivery attempt id
        in: path
        name: deliveryAttemptID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.DeliveryAttempt'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get delivery attempt
      tags:
      - DeliveryAttempts
  /events/{eventID}/replay:
    put:
      description: This endpoint replays an app event
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: event id
        in: path
        name: eventID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/datastore.Event'
                      - properties:
                          data:
                            $ref: '#/components/schemas/server.Stub'
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Replay app event
      tags:
      - Events
  /groups:
    get:
      description: This endpoint fetches groups
      parameters:
      - description: group name
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/datastore.Group'
                      type: array
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get groups
      tags:
      - Group
  /groups/{groupID}:
    delete:
      description: This endpoint deletes a group using its id
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a group
      tags:
      - Group
    get:
      description: This endpoint fetches a group by its id
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Group'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a group
      tags:
      - Group
    put:
      description: This endpoint updates a group
      parameters:
      - description: group id
        in: path
        name: groupID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Group'
        description: Group Details
        required: true
        x-originalParamName: group
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Group'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - Group
  /security/applications/{appID}/keys:
    post:
      description: This endpoint creates an api key that will be used by app portal
      parameters:
      - description: application ID
        in: path
        name: appID
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.PortalAPIKeyResponse'
                  type: object
          description: Created
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an api key for app portal (API)
      tags:
      - APIKey
  /sources:
    get:
      description: This endpoint fetches multiple sources
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/models.SourceResponse'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple sources
      tags:
      - Source
    post:
      description: This endpoint creates a source
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Source'
        description: Source Details
        required: true
        x-originalParamName: source
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a source
      tags:
      - Source
  /sources/{sourceID}:
    delete:
      description: This endpoint deletes a source
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete source
      tags:
      - Source
    get:
      description: This endpoint fetches a source by its id
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get a source
      tags:
      - Source
    put:
      description: This endpoint updates a source
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: source id
        in: path
        name: sourceID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Source'
        description: Source Details
        required: true
        x-originalParamName: source
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.SourceResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a source
      tags:
      - Source
  /subscriptions:
    get:
      description: This endpoint fetches all the subscriptions
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: subscription title
        in: query
        name: q
        schema:
          type: string
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Subscription'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all subscriptions
      tags:
      - Subscriptions
    post:
      description: This endpoint creates a subscriptions
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Subscription'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Creates a subscription
      tags:
      - Subscriptions
  /subscriptions/{subscriptionID}:
    delete:
      description: This endpoint deletes a subscription
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete subscription
      tags:
      - Application
    get:
      description: This endpoint fetches an Subscription by it's id
      parameters:
      - description: group id
        in: query
        name: groupId
        required: true
        schema:
          type: string
      - description: application id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Gets a subscription
      tags:
      - Subscription
    put:
      description: This endpoint updates a subscription
      parameters:
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Subscription'
        description: Subscription Details
        required: true
        x-originalParamName: subscription
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a subscription
      tags:
      - Subscription
  /subscriptions/{subscriptionID}/toggle_status:
    put:
      description: This endpoint updates a subscription
      parameters:
      - description: subscription id
        in: path
        name: subscriptionID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Subscription'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Toggles a subscription's status from active <-> inactive
      tags:
      - Subscription
  /ui/organisations:
    get:
      description: This endpoint fetches multiple organisations
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.Organisation'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get organisations
      tags:
      - Organisation
    post:
      description: This endpoint creates an organisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Organisation'
        description: Organisation Details
        required: true
        x-originalParamName: organisation
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Organisation'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an organisation
      tags:
      - Organisation
  /ui/organisations/{orgID}:
    delete:
      description: This endpoint deletes an organisation
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete organisation
      tags:
      - Organisation
    get:
      description: This endpoint fetches an organisation by its id
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Organisation'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get an organisation
      tags:
      - Organisation
    put:
      description: This endpoint updates an organisation
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Organisation'
        description: Organisation Details
        required: true
        x-originalParamName: organisation
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Organisation'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update an organisation
      tags:
      - Organisation
  /ui/organisations/{orgID}/groups:
    post:
      description: This endpoint creates a group
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.Group'
        description: Group Details
        required: true
        x-originalParamName: group
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Group'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a group
      tags:
      - Group
  /ui/organisations/{orgID}/invites:
    post:
      description: This endpoint invites a user to join an organisation
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.OrganisationInvite'
        description: Organisation Invite Details
        required: true
        x-originalParamName: invite
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Invite a user to join an organisation
      tags:
      - Organisation
  /ui/organisations/{orgID}/invites/{inviteID}/cancel:
    post:
      description: This endpoint cancels an organization invite
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: invite id
        in: path
        name: inviteID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.OrganisationInvite'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: cancel organization invite
      tags:
      - Organisation
  /ui/organisations/{orgID}/invites/{inviteID}/resend:
    post:
      description: This endpoint resends the organization invite to a user
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: invite id
        in: path
        name: inviteID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: resend organization invite
      tags:
      - Organisation
  /ui/organisations/{orgID}/invites/pending:
    get:
      description: This endpoint fetches pending organisation invites
      parameters:
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch pending organisation invites
      tags:
      - Organisation
  /ui/organisations/{orgID}/members:
    get:
      description: This endpoint fetches an organisation's members
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.OrganisationMember'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get organisation members
      tags:
      - Organisation
  /ui/organisations/{orgID}/members/{memberID}:
    delete:
      description: This endpoint deletes an organisation's member
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: organisation member id
        in: path
        name: memberID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete an organisation's member
      tags:
      - Organisation
    get:
      description: This endpoint fetches an organisation's member
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: organisation member id
        in: path
        name: memberID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.OrganisationMember'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get organisation member
      tags:
      - Organisation
    put:
      description: This endpoint updates an organisation's member
      parameters:
      - description: organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: organisation member id
        in: path
        name: memberID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateOrganisationMember'
        description: Organisation member Details
        required: true
        x-originalParamName: organisation_member
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.Organisation'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update an organisation's member
      tags:
      - Organisation
  /ui/organisations/{orgID}/security/keys:
    get:
      description: This endpoint fetches multiple api keys
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: results per page
        in: query
        name: perPage
        schema:
          type: string
      - description: page number
        in: query
        name: page
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/server.pagedResponse'
                      - properties:
                          content:
                            items:
                              $ref: '#/components/schemas/datastore.APIKey'
                            type: array
                        type: object
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetch multiple api keys
      tags:
      - APIKey
    post:
      description: This endpoint creates an api key that will be used by the native
        auth realm
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.APIKey'
        description: API Key
        required: true
        x-originalParamName: apiKey
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/models.APIKeyResponse'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create an api key
      tags:
      - APIKey
  /ui/organisations/{orgID}/security/keys/{keyID}:
    get:
      description: This endpoint fetches an api key by its id
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: API Key id
        in: path
        name: keyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.APIKey'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get api key by id
      tags:
      - APIKey
    put:
      description: This endpoint updates an api key
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: API Key id
        in: path
        name: keyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.APIKey'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: update api key
      tags:
      - APIKey
  /ui/organisations/{orgID}/security/keys/{keyID}/revoke:
    put:
      description: This endpoint revokes an api key
      parameters:
      - description: Organisation id
        in: path
        name: orgID
        required: true
        schema:
          type: string
      - description: API Key id
        in: path
        name: keyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Revoke API Key
      tags:
      - APIKey
  /ui/organisations/process_invite:
    post:
      description: This endpoint process a user's response to an organisation invite
      parameters:
      - description: invite token
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: email
        in: query
        name: accepted
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.User'
        description: User Details
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Accept or decline an organisation invite
      tags:
      - Organisation
  /users/{userID}/password:
    put:
      description: This endpoint updates a user's password
      parameters:
      - description: user id
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdatePassword'
        description: Password Details
        required: true
        x-originalParamName: group
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Updates a user's password
      tags:
      - User
  /users/{userID}/profile:
    get:
      description: This endpoint fetches a user
      parameters:
      - description: user id
        in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Gets a user
      tags:
      - User
    put:
      description: This endpoint updates a user
      parameters:
      - description: user id
        in: path
        name: userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.UpdateUser'
        description: User Details
        required: true
        x-originalParamName: group
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Updates a user
      tags:
      - User
  /users/forgot-password:
    post:
      description: This endpoint generates a password reset token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.ForgotPassword'
        description: Forgot Password Details
        required: true
        x-originalParamName: email
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Send password reset token
      tags:
      - User
  /users/reset-password:
    post:
      description: This endpoint resets a users password
      parameters:
      - description: reset token
        in: query
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.ResetPassword'
        description: Reset Password Details
        required: true
        x-originalParamName: password
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      summary: Reset user password
      tags:
      - User
  /users/token:
    get:
      description: This endpoint finds a user by an invite token
      parameters:
      - description: invite token
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/datastore.User'
                  type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/server.serverResponse'
                - properties:
                    data:
                      $ref: '#/components/schemas/server.Stub'
                  type: object
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Find user by invite token
      tags:
      - Organisation
servers:
- url: https://cloud.staging.getconvoy.io/api/v1
tags:
- description: Application related APIs
  name: Application
- description: Endpoint related APIs
  name: Application Endpoints
- description: Event related APIs
  name: Events
- description: API Key related APIs
  name: APIKey
- description: EventDelivery related APIs
  name: EventDelivery
- description: Delivery Attempt related APIs
  name: DeliveryAttempts
- description: Group related APIs
  name: Group
- description: Organisation related APIs
  name: Organisation
