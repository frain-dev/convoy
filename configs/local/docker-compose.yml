version: "3"

services:
    web:
        image: docker.cloudsmith.io/convoy/convoy/frain-dev/convoy:v24.4.1
        command: ["/start.sh"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        ports:
            - "5005:5005"
        healthcheck:
            test: ["CMD-SHELL", "wget -q --spider localhost:5005/health"]
            interval: 5s
            timeout: 15s
            retries: 3
            start_period: 5s
        depends_on:
            - postgres
            - redis_server
            - pgbouncer

    worker:
        image: docker.cloudsmith.io/convoy/convoy/frain-dev/convoy:v24.4.1
        command: ["./cmd", "worker", "--config", "convoy.json"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        depends_on:
            web:
                condition: service_healthy

    stream:
        image: docker.cloudsmith.io/convoy/convoy/frain-dev/convoy:v24.4.1
        command: ["./cmd", "stream", "--config", "convoy.json"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        depends_on:
            web:
                condition: service_healthy

    ingest:
        image: docker.cloudsmith.io/convoy/convoy/frain-dev/convoy:v24.4.1
        command: ["./cmd", "ingest", "--config", "convoy.json"]
        volumes:
            - ./convoy.json:/convoy.json
        restart: on-failure
        depends_on:
            web:
                condition: service_healthy

    pgbouncer:
        image: bitnami/pgbouncer:latest
        hostname: pgbouncer
        restart: unless-stopped
        depends_on:
            - postgres
        env_file:
            - ./conf/.env
        volumes:
            - ./conf/:/bitnami/pgbouncer/conf/
            - ./conf/userlists.txt:/bitnami/userlists.txt
        ports:
            - 6432:6432

    postgres:
        image: postgres:15.2-alpine
        restart: unless-stopped
        environment:
            POSTGRES_DB: convoy
            POSTGRES_USER: convoy
            POSTGRES_PASSWORD: pg_password
            PGDATA: /data/postgres
        volumes:
          - postgres_data:/data/postgres

    redis_server:
        image: redis:alpine
        restart: always
        volumes:
          - redis_data:/data

volumes:
    postgres_data:
    redis_data:
